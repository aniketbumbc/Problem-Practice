{"id":"main.js","dependencies":[{"name":"/Users/aniketbhavsar/Desktop/Interview prep/Demo code/package.json","includedInParent":true,"mtime":1619573079282}],"generated":{"js":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// const reverse = (str) => {\n//   let revsStr = '';\n//   if (str.length > 1) {\n//     revsStr = str.split('').reverse();\n//   }\n//   return revsStr.join('');\n// };\nvar reverse = function reverse(str) {\n  var revs = '';\n\n  var _iterator = _createForOfIteratorHelper(str),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var char = _step.value;\n      revs = char + revs;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return revs;\n};\n\nconsole.log(reverse('abc'));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"name":"reverse","generated":{"line":14,"column":4},"source":"main.js","original":{"line":9,"column":6}},{"generated":{"line":14,"column":11},"source":"main.js","original":{"line":9,"column":13}},{"generated":{"line":14,"column":14},"source":"main.js","original":{"line":9,"column":16}},{"name":"reverse","generated":{"line":14,"column":23},"source":"main.js","original":{"line":9,"column":6}},{"generated":{"line":14,"column":30},"source":"main.js","original":{"line":9,"column":16}},{"name":"str","generated":{"line":14,"column":31},"source":"main.js","original":{"line":9,"column":17}},{"generated":{"line":14,"column":34},"source":"main.js","original":{"line":9,"column":16}},{"generated":{"line":14,"column":36},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":10,"column":2}},{"name":"revs","generated":{"line":15,"column":6},"source":"main.js","original":{"line":10,"column":6}},{"generated":{"line":15,"column":10},"source":"main.js","original":{"line":10,"column":10}},{"generated":{"line":15,"column":13},"source":"main.js","original":{"line":10,"column":13}},{"generated":{"line":15,"column":15},"source":"main.js","original":{"line":10,"column":2}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"name":"str","generated":{"line":17,"column":45},"source":"main.js","original":{"line":12,"column":19}},{"generated":{"line":17,"column":48},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":12,"column":2}},{"generated":{"line":21,"column":56},"source":"main.js","original":{"line":12,"column":24}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":12,"column":24}},{"name":"char","generated":{"line":22,"column":10},"source":"main.js","original":{"line":12,"column":11}},{"generated":{"line":22,"column":14},"source":"main.js","original":{"line":12,"column":24}},{"name":"revs","generated":{"line":23,"column":0},"source":"main.js","original":{"line":13,"column":4}},{"name":"revs","generated":{"line":23,"column":6},"source":"main.js","original":{"line":13,"column":4}},{"generated":{"line":23,"column":10},"source":"main.js","original":{"line":13,"column":8}},{"name":"char","generated":{"line":23,"column":13},"source":"main.js","original":{"line":13,"column":11}},{"generated":{"line":23,"column":17},"source":"main.js","original":{"line":13,"column":15}},{"name":"revs","generated":{"line":23,"column":20},"source":"main.js","original":{"line":13,"column":18}},{"generated":{"line":23,"column":24},"source":"main.js","original":{"line":13,"column":4}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":14,"column":3}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":9,"column":25}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":15,"column":2}},{"name":"revs","generated":{"line":31,"column":9},"source":"main.js","original":{"line":15,"column":9}},{"generated":{"line":31,"column":13},"source":"main.js","original":{"line":15,"column":2}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":16,"column":1}},{"generated":{"line":32,"column":1},"source":"main.js","original":{"line":9,"column":0}},{"name":"console","generated":{"line":34,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":34,"column":7},"source":"main.js","original":{"line":18,"column":7}},{"name":"log","generated":{"line":34,"column":8},"source":"main.js","original":{"line":18,"column":8}},{"generated":{"line":34,"column":11},"source":"main.js","original":{"line":18,"column":0}},{"name":"reverse","generated":{"line":34,"column":12},"source":"main.js","original":{"line":18,"column":12}},{"generated":{"line":34,"column":19},"source":"main.js","original":{"line":18,"column":19}},{"generated":{"line":34,"column":20},"source":"main.js","original":{"line":18,"column":20}},{"generated":{"line":34,"column":25},"source":"main.js","original":{"line":18,"column":19}},{"generated":{"line":34,"column":26},"source":"main.js","original":{"line":18,"column":0}}],"sources":{"main.js":"// const reverse = (str) => {\n//   let revsStr = '';\n//   if (str.length > 1) {\n//     revsStr = str.split('').reverse();\n//   }\n//   return revsStr.join('');\n// };\n\nconst reverse = (str) => {\n  let revs = '';\n\n  for (let char of str) {\n    revs = char + revs;\n  }\n  return revs;\n};\n\nconsole.log(reverse('abc'));\n"},"lineCount":null}},"error":null,"hash":"a645f25da6e9de7139ee266f4535c955","cacheData":{"env":{}}}