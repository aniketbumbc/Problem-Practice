{"version":3,"file":"rxjs-debug.js","sources":["../../../LICENSE","../../../packages/rxjs-debug/src/lib/meta.ts","../../../packages/rxjs-debug/src/lib/logger.ts","../../../packages/rxjs-debug/src/lib/debugger.ts","../../../../packages/rxjs-debug/src/public-api.ts","../../../../packages/rxjs-debug/src/rxjs-debug.ts"],"sourcesContent":["/*\nMIT License\n\nCopyright (c) 2020 Ankit Singh <dabalyan@hotmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nThis license applies to the complete mono-repo, unless specified otherwise.\n*/\n","import {asapScheduler, of, Subject} from 'rxjs';\nimport {\n  audit,\n  buffer,\n  bufferCount,\n  bufferTime,\n  bufferToggle,\n  bufferWhen,\n  catchError,\n  combineAll,\n  combineLatest,\n  concat,\n  count,\n  debounce,\n  debounceTime,\n  defaultIfEmpty,\n  delay,\n  delayWhen,\n  dematerialize,\n  distinct,\n  distinctUntilChanged,\n  elementAt,\n  endWith,\n  every,\n  exhaust,\n  exhaustMap,\n  expand,\n  filter,\n  finalize,\n  find,\n  findIndex,\n  first,\n  groupBy,\n  ignoreElements,\n  isEmpty,\n  last,\n  map,\n  mapTo,\n  materialize,\n  merge,\n  mergeMap,\n  mergeScan,\n  multicast,\n  observeOn,\n  onErrorResumeNext,\n  pairwise,\n  partition,\n  pluck,\n  publishBehavior,\n  publishLast,\n  publishReplay,\n  race,\n  reduce,\n  refCount,\n  repeat,\n  repeatWhen,\n  retry,\n  retryWhen,\n  sample,\n  sampleTime,\n  scan,\n  sequenceEqual,\n  share,\n  shareReplay,\n  single,\n  skip,\n  skipLast,\n  skipUntil,\n  skipWhile,\n  startWith,\n  subscribeOn,\n  switchMap,\n  take,\n  takeLast,\n  takeUntil,\n  takeWhile,\n  tap,\n  throttle,\n  throttleTime,\n  throwIfEmpty,\n  timeInterval,\n  timeoutWith,\n  toArray,\n  windowCount,\n  windowTime,\n  windowToggle,\n  windowWhen,\n  withLatestFrom,\n  zip,\n  zipAll,\n} from 'rxjs/operators';\n\nconst NUM = 5;\nconst OF$ = of(1);\nconst MAPPER = () => OF$;\nconst NOOP = (...args: any[]): any => {};\n\nconst OPERATORS_BY_CATEGORY = {\n  conditional: ['defaultIfEmpty', 'every', 'find', 'findIndex', 'isEmpty', 'throwIfEmpty'],\n  errorHandling: ['catchError', 'retry', 'retryWhen', 'onErrorResumeNext'],\n  filter: [\n    'take',\n    'takeLast',\n    'takeUntil',\n    'takeWhile',\n    'audit',\n    'debounce',\n    'debounceTime',\n    'distinct',\n    'distinctUntilChanged',\n    'elementAt',\n    'filter',\n    'first',\n    'ignoreElements',\n    'last',\n    'sample',\n    'sampleTime',\n    'single',\n    'skip',\n    'skipLast',\n    'skipUntil',\n    'skipWhile',\n    'throttle',\n    'throttleTime',\n  ],\n  join: ['combineAll', 'startWith', 'exhaust', 'withLatestFrom', 'endWith'],\n  joinCreation: ['combineLatest', 'concat', 'merge', 'partition', 'race', 'zip', 'zipAll'],\n  mathAndAggregate: ['count', 'reduce'],\n  multicast: [\n    'share',\n    'multicast',\n    'shareReplay',\n    'publishBehavior',\n    'publishLast',\n    'publishReplay',\n  ],\n  transformation: [\n    'map',\n    'mapTo',\n    'buffer',\n    'bufferCount',\n    'bufferTime',\n    'bufferToggle',\n    'bufferWhen',\n    'switchMap',\n    'exhaustMap',\n    'pairwise',\n    'pluck',\n    'scan',\n    'expand',\n    'groupBy',\n    'mergeMap',\n    'mergeScan',\n    'windowCount',\n    'windowTime',\n    'windowToggle',\n    'windowWhen',\n  ],\n  utility: [\n    'delay',\n    'delayWhen',\n    'finalize',\n    'dematerialize',\n    'materialize',\n    'tap',\n    'observeOn',\n    'refCount',\n    'toArray',\n    'repeat',\n    'repeatWhen',\n    'sequenceEqual',\n    'subscribeOn',\n    'timeInterval',\n    'timeoutWith',\n  ],\n};\n\nconst COLOR_GENERATORS_BY_CATEGORY = {\n  conditional: a => `rgba(200,200,200,${a || 1})`,\n  errorHandling: a => `rgba(255,0,120,${a || 1})`,\n  filter: a => `rgba(255,255,0,${a || 1})`,\n  join: a => `rgba(0,125,255,${a || 1})`,\n  joinCreation: a => `rgba(255,100,0,${a || 1})`,\n  mathAndAggregate: a => `rgba(200,200,200,${a || 1})`,\n  multicast: a => `rgba(0,255,217,${a || 1})`,\n  transformation: a => `rgba(17,255,0,${a || 1})`,\n  utility: a => `rgba(245,0,255,${a || 1})`,\n};\n\nexport const OPERATORS_BY_RETURNED_FN_BODY = {\n  [String(audit(MAPPER))]: 'audit',\n  // [String(auditTime(NUM))]: 'auditTime', // audit\n  [String(buffer(OF$))]: 'buffer',\n  [String(bufferCount(NUM))]: 'bufferCount',\n  [String(bufferTime(NUM))]: 'bufferTime',\n  [String(bufferToggle(OF$, MAPPER))]: 'bufferToggle',\n  [String(bufferWhen(MAPPER))]: 'bufferWhen',\n  [String(catchError(MAPPER))]: 'catchError',\n  [String(combineAll())]: 'combineAll',\n  [String(combineLatest([OF$]))]: 'combineLatest',\n  [String(concat())]: 'concat',\n  // [String(concatAll())]: 'concatAll', // mergeMap\n  // [String(concatMap(MAPPER))]: 'concatMap', // mergeMap\n  // [String(concatMapTo(MAPPER))]: 'concatMapTo', // mergeMap\n  [String(count())]: 'count',\n  [String(debounce(MAPPER))]: 'debounce',\n  [String(debounceTime(NUM))]: 'debounceTime',\n  [String(defaultIfEmpty())]: 'defaultIfEmpty',\n  [String(delay(NUM))]: 'delay',\n  [String(delayWhen(MAPPER))]: 'delayWhen',\n  [String(dematerialize())]: 'dematerialize',\n  [String(distinct())]: 'distinct',\n  [String(distinctUntilChanged())]: 'distinctUntilChanged',\n  // [String(distinctUntilKeyChanged<[]>(NUM))]: 'distinctUntilKeyChanged', // distinctUntilChanged\n  [String(elementAt(NUM))]: 'elementAt',\n  [String(endWith())]: 'endWith',\n  [String(every(NOOP))]: 'every',\n  [String(exhaust())]: 'exhaust',\n  [String(exhaustMap(MAPPER))]: 'exhaustMap',\n  [String(expand(MAPPER))]: 'expand',\n  [String(filter(NOOP))]: 'filter',\n  [String(finalize(MAPPER))]: 'finalize',\n  [String(find(NOOP))]: 'find',\n  [String(findIndex(NOOP))]: 'findIndex',\n  [String(first())]: 'first',\n  [String(groupBy(MAPPER))]: 'groupBy',\n  [String(ignoreElements())]: 'ignoreElements',\n  [String(isEmpty())]: 'isEmpty',\n  [String(last())]: 'last',\n  [String(map(MAPPER))]: 'map',\n  [String(mapTo(MAPPER))]: 'mapTo',\n  [String(materialize())]: 'materialize',\n  // [String(max())]: 'max', // reduce\n  [String(merge())]: 'merge',\n  // [String(mergeAll())]: 'mergeAll', // mergeMap\n  [String(mergeMap(MAPPER))]: 'mergeMap',\n  // [String(flatMap(MAPPER))]: 'flatMap', // mergeMap\n  // [String(mergeMapTo(MAPPER))]: 'mergeMapTo', // mergeMap\n  [String(mergeScan(MAPPER, NUM))]: 'mergeScan',\n  // [String(min())]: 'min', // reduce\n  [String(multicast(new Subject()))]: 'multicast',\n  [String(observeOn(asapScheduler))]: 'observeOn',\n  [String(onErrorResumeNext())]: 'onErrorResumeNext',\n  [String(pairwise())]: 'pairwise',\n  [String(partition(NOOP))]: 'partition',\n  [String(pluck(''))]: 'pluck',\n  // [String(publish())]: 'publish', // multicast\n  [String(publishBehavior(MAPPER))]: 'publishBehavior',\n  [String(publishLast())]: 'publishLast',\n  [String(publishReplay())]: 'publishReplay',\n  [String(race())]: 'race',\n  [String(reduce(MAPPER))]: 'reduce',\n  [String(repeat())]: 'repeat',\n  [String(repeatWhen(MAPPER))]: 'repeatWhen',\n  [String(retry())]: 'retry',\n  [String(retryWhen(MAPPER))]: 'retryWhen',\n  [String(refCount())]: 'refCount',\n  [String(sample(OF$))]: 'sample',\n  [String(sampleTime(NUM))]: 'sampleTime',\n  [String(scan(MAPPER))]: 'scan',\n  [String(sequenceEqual(OF$))]: 'sequenceEqual',\n  [String(share())]: 'share',\n  [String(shareReplay())]: 'shareReplay',\n  [String(single())]: 'single',\n  [String(skip(NUM))]: 'skip',\n  [String(skipLast(NUM))]: 'skipLast',\n  [String(skipUntil(OF$))]: 'skipUntil',\n  [String(skipWhile(NOOP))]: 'skipWhile',\n  [String(startWith(MAPPER))]: 'startWith',\n  [String(subscribeOn(asapScheduler))]: 'subscribeOn',\n  // [String(switchAll())]: 'switchAll', // switchMap\n  [String(switchMap(MAPPER))]: 'switchMap',\n  // [String(switchMapTo(OF$))]: 'switchMapTo', // switchMap\n  [String(take(NUM))]: 'take',\n  [String(takeLast(NUM))]: 'takeLast',\n  [String(takeUntil(OF$))]: 'takeUntil',\n  [String(takeWhile(NOOP))]: 'takeWhile',\n  [String(tap(MAPPER))]: 'tap',\n  [String(throttle(MAPPER))]: 'throttle',\n  [String(throttleTime(NUM))]: 'throttleTime',\n  [String(throwIfEmpty(MAPPER))]: 'throwIfEmpty',\n  [String(timeInterval(asapScheduler))]: 'timeInterval',\n  // [String(timeout(NUM))]: 'timeout', // timeoutWith\n  [String(timeoutWith(NUM, OF$))]: 'timeoutWith',\n  // [String(timestamp(asapScheduler))]: 'timestamp', // map\n  [String(toArray())]: 'toArray',\n  [String(windowCount(NUM))]: 'windowCount',\n  [String(windowTime(NUM))]: 'windowTime',\n  [String(windowToggle(OF$, MAPPER))]: 'windowToggle',\n  [String(windowWhen(MAPPER))]: 'windowWhen',\n  [String(withLatestFrom())]: 'withLatestFrom',\n  [String(zip())]: 'zip',\n  [String(zipAll())]: 'zipAll',\n};\n\nexport const COLORS_BY_OPERATOR = {\n  source: 'rgb(240,240,240)',\n};\n\nObject.entries(OPERATORS_BY_CATEGORY).forEach(([cat, ops]) => {\n  const span = 0.3 / ops.length;\n  ops.forEach((op, i) => {\n    COLORS_BY_OPERATOR[op] = COLOR_GENERATORS_BY_CATEGORY[cat]((1 - span * i).toFixed(2));\n    /*console.log(\n      `%c ${op} `,\n      `background-color: #000; padding: 3px; border-radius: 6px;color: ${colorGenByCat[cat](\n        1 - span * i\n      )}`\n    );*/\n  });\n});\n","import {COLORS_BY_OPERATOR, OPERATORS_BY_RETURNED_FN_BODY} from './meta';\n\nlet lastLogDebuggerId: string;\nlet lastLogOperatorExecCountMsg: string;\nconst PREFIX = '➰ ';\n\nexport class Logger {\n  private readonly startMsg: string;\n  private readonly endMsg: string;\n  private readonly subscriptionMsg: string;\n  private readonly completedMsg: string;\n  private readonly erroredMsg: string;\n  private readonly basePad: number;\n  private readonly pad: number;\n\n  readonly operatorNames: string[];\n  private readonly longestNameLen: number;\n\n  private readonly operatorsExecCountMap = {};\n  private longestOperatorExecCountMsgLen = 0;\n  private currentOperatorExecCountMsg: string;\n\n  private subCount = 0;\n  private subCountMsg: string;\n\n  constructor(\n    readonly debuggerId: string,\n    operators: any[],\n    private hideOutputs: boolean,\n    private noStyling: boolean\n  ) {\n    this.startMsg = debuggerId + ' >> START';\n    this.endMsg = debuggerId + ' >> END';\n    this.subscriptionMsg = debuggerId + ' >> SUBSCRIBED';\n    this.erroredMsg = debuggerId + ' >> ERRORED';\n    this.completedMsg = debuggerId + ' >> COMPLETED';\n    this.basePad = 7;\n    this.pad =\n      this.basePad +\n      Math.max(\n        this.startMsg.length,\n        this.endMsg.length,\n        this.subscriptionMsg.length,\n        this.completedMsg.length\n      );\n\n    this.operatorNames = ['source'].concat(\n      operators.map(op => OPERATORS_BY_RETURNED_FN_BODY[String(op)] || '')\n    );\n    this.longestNameLen = this.operatorNames.reduce((a, b) => (a.length > b.length ? a : b)).length;\n  }\n\n  logStart(): void {\n    const msg = this.startMsg.padEnd(this.basePad + this.pad, '_');\n    console.log(this.newLines(2) + PREFIX + msg + this.subCountMsg.padStart(4, '_') + '__▽');\n  }\n\n  logResume(): void {\n    if (\n      (lastLogDebuggerId && lastLogDebuggerId !== this.debuggerId) ||\n      (lastLogOperatorExecCountMsg &&\n        lastLogOperatorExecCountMsg !== this.currentOperatorExecCountMsg)\n    ) {\n      const msg = this.debuggerId.padEnd(this.basePad + this.pad, '_');\n      console.log(this.newLines(2) + PREFIX + msg + this.subCountMsg.padStart(4, '_') + '___');\n    }\n  }\n\n  logEnd(): void {\n    const msg = this.endMsg.padEnd(this.basePad + this.pad, '‾');\n    console.log(PREFIX + msg + this.subCountMsg.padStart(4, '‾') + '‾‾△' + this.newLines(3));\n  }\n\n  logOperator(opIndex: number, value): void {\n    const opName: string = this.operatorNames[opIndex];\n    const opIndexStr = String(opIndex).padStart(2, ' ');\n    const paddedIndexAndName = (opIndexStr + ' ' + opName).padEnd(this.longestNameLen + 4, ' ');\n    const paddedExecCountMsg = `${this.currentOperatorExecCountMsg}`\n      .padStart(this.longestOperatorExecCountMsgLen, ' ')\n      .padEnd(this.longestOperatorExecCountMsgLen + 1, ' ');\n\n    console.log(\n      PREFIX + (this.noStyling ? '' : '%c') + paddedIndexAndName + paddedExecCountMsg,\n      this.noStyling\n        ? ''\n        : `color: ${COLORS_BY_OPERATOR[opName]}; background-color: #000; padding: 3px; border-radius: 6px;`,\n      this.hideOutputs === true ? '' : value\n    );\n\n    lastLogDebuggerId = this.debuggerId;\n    lastLogOperatorExecCountMsg = this.currentOperatorExecCountMsg;\n  }\n\n  prepare(opIndex: number): void {\n    const opName: string = this.operatorNames[opIndex];\n\n    this.operatorsExecCountMap[opIndex + opName] =\n      (this.operatorsExecCountMap[opIndex + opName] ?? 0) + 1;\n    this.currentOperatorExecCountMsg =\n      this.operatorsExecCountMap[opIndex + opName] > 1\n        ? ` (${this.operatorsExecCountMap[opIndex + opName]})`\n        : '';\n\n    this.longestOperatorExecCountMsgLen = Math.max(\n      this.longestOperatorExecCountMsgLen,\n      this.currentOperatorExecCountMsg.length\n    );\n  }\n\n  addSubscription(): void {\n    this.subCount++;\n    this.subCountMsg = this.subCount > 1 ? `S:${this.subCount}` : '';\n    const msg = this.subscriptionMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▼' + this.newLines(2)\n    );\n  }\n\n  logErrored(): void {\n    const msg = this.erroredMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▲' + this.newLines(2)\n    );\n  }\n\n  logCompleted(): void {\n    const msg = this.completedMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▲' + this.newLines(2)\n    );\n  }\n\n  private newLines(n: number): string {\n    return this.noStyling ? '' : Array(n).fill('\\n').join('');\n  }\n}\n","import {Observable, Subscription, throwError} from 'rxjs';\nimport {catchError, delay, tap} from 'rxjs/operators';\nimport {Logger} from './logger';\nimport {DebuggerOptions} from './models';\n\nlet debuggersCount = 0;\n\n/**\n * RxJS-Debug wrapper function, to enable automated logging for Observables and Streams.\n *\n * When an Observable is wrapped with this function,\n * it returns the same Observable after injecting the logging hooks into it.\n *\n * It overrides the `subscribe` and `pipe` methods and\n * replaces them with the custom trapped versions to achieve the expected monitoring and logging behavior.\n *\n * @example\n * ```ts\n * // raw Observable\n * const source$ = of(1, 2, 3)\n *\n * // wrapped Observable with automatic logging enabled\n * const sourceWithAutomaticLogging$ = $D(source$)\n *\n * // subscribe to start the logging\n * sourceWithAutomaticLogging$.subscribe()\n *\n * // you'll see the logging in the console\n *\n * // the target use-case would be when there are multiple operators applied\n * $D(source$).pipe(\n *   map(x => x + 5),\n *   switchMap(x => of(x * 2)),\n * )\n *\n * // you'll see even more detailed and useful logging in the console\n * ```\n *\n * @param $ The Observable that needs to be debugged.\n * @param options Configuration options for RxJS-Debug instance.\n * @returns A copy of the passed Observable, with logging enabled.\n */\nexport function $D<T>($: Observable<T>, options?: DebuggerOptions): Observable<T> {\n  const d$ = new Observable<T>();\n  d$.source = $;\n  $ = d$;\n\n  options = options || {};\n  const debuggerId: string = String(options.id ?? ++debuggersCount);\n\n  const ogSubscribe = $.subscribe;\n  const ogPipe = $.pipe;\n  let logger: Logger;\n\n  $.pipe = function (...operators: any): Observable<T> {\n    logger = new Logger(debuggerId, operators, options.hideOutputs, options.noStyling);\n    const injections = logger.operatorNames.length;\n\n    for (let i = 0; i < injections; i++) {\n      const tapper = tap(value => {\n        logger.prepare(i);\n\n        if (i === 0) {\n          logger.logStart();\n        } else {\n          logger.logResume();\n        }\n\n        logger.logOperator(i, value);\n\n        if (i === injections - 1) {\n          logger.logEnd();\n        }\n      });\n\n      operators.splice(i + i, 0, tapper);\n    }\n    if (typeof options.addDelay === 'number') {\n      const delayer = delay(options.addDelay);\n      const totalInjections = operators.length;\n      for (let i = 0; i < totalInjections; i++) {\n        operators.splice(i + i, 0, delayer);\n      }\n    }\n    operators.push(\n      catchError(err => {\n        logger.logErrored();\n        return throwError(err);\n      })\n    );\n    operators.push(tap({complete: () => logger.logCompleted()}));\n\n    return ogPipe.apply(this, operators);\n  };\n\n  $.subscribe = function (...args): Subscription {\n    if (!logger) {\n      const tappedObservable = $.pipe();\n      return tappedObservable.subscribe(...args);\n    }\n\n    logger.addSubscription();\n    return ogSubscribe.apply(this, args);\n  };\n\n  return $;\n}\n","/*\n * Public API Surface of rxjs-debug\n */\n\nimport '../../../LICENSE';\n\nexport {$D} from './lib/debugger';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}