{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/rxjs-debug/src/lib/meta.ts","../../../packages/rxjs-debug/src/lib/logger.ts","../../../packages/rxjs-debug/src/lib/debugger.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","lastLogDebuggerId","lastLogOperatorExecCountMsg","OF$","of","MAPPER","NOOP","args","_i","COLOR_GENERATORS_BY_CATEGORY","conditional","a","errorHandling","filter","join","joinCreation","mathAndAggregate","multicast","transformation","utility","OPERATORS_BY_RETURNED_FN_BODY","_a","String","audit","buffer","bufferCount","bufferTime","bufferToggle","bufferWhen","catchError","combineAll","combineLatest","count","debounce","debounceTime","defaultIfEmpty","delay","delayWhen","dematerialize","distinct","distinctUntilChanged","elementAt","endWith","every","exhaust","exhaustMap","expand","finalize","find","findIndex","first","groupBy","ignoreElements","isEmpty","last","map","mapTo","materialize","merge","mergeMap","mergeScan","Subject","observeOn","asapScheduler","onErrorResumeNext","pairwise","partition","pluck","publishBehavior","publishLast","publishReplay","race","reduce","repeat","repeatWhen","retry","retryWhen","refCount","sample","sampleTime","scan","sequenceEqual","share","shareReplay","single","skip","skipLast","skipUntil","skipWhile","startWith","subscribeOn","switchMap","take","takeLast","takeUntil","takeWhile","tap","throttle","throttleTime","throwIfEmpty","timeInterval","timeoutWith","toArray","windowCount","windowTime","windowToggle","windowWhen","withLatestFrom","zip","zipAll","COLORS_BY_OPERATOR","source","entries","forEach","_b","cat","ops","span","op","toFixed","PREFIX","Logger","debuggerId","operators","hideOutputs","noStyling","this","operatorsExecCountMap","longestOperatorExecCountMsgLen","subCount","startMsg","endMsg","subscriptionMsg","erroredMsg","completedMsg","basePad","pad","Math","max","operatorNames","longestNameLen","b","prototype","logStart","msg","padEnd","console","log","newLines","subCountMsg","padStart","logResume","currentOperatorExecCountMsg","logEnd","logOperator","opIndex","opName","paddedIndexAndName","paddedExecCountMsg","prepare","addSubscription","logErrored","logCompleted","Array","fill","debuggersCount","$","options","d$","Observable","logger","id","ogSubscribe","subscribe","ogPipe","pipe","operators$1","injections","tapper","splice","addDelay","delayer","totalInjections","err","throwError","complete","apply","tappedObservable"],"mappings":";;;;;;;;;;;;;;oFAyG6BA,OAAOC,gBAwBpBC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,WAGKM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,EA8CX,MAAyBZ,OAAOC,OCvGhC,IC1FIqB,EACAC,ED0FEC,EAAMC,EAAAA,GAAG,GACTC,EAAS,WAAM,OAAAF,GACfG,EAAO,eAAC,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAV,UAAAC,OAAAS,IAAAD,EAAAC,GAAAV,UAAAU,IAkFRC,EAA+B,CACnCC,YAAa,SAAAC,GAAK,MAAA,qBAAoBA,GAAK,GAAC,KAC5CC,cAAe,SAAAD,GAAK,MAAA,mBAAkBA,GAAK,GAAC,KAC5CE,OAAQ,SAAAF,GAAK,MAAA,mBAAkBA,GAAK,GAAC,KACrCG,KAAM,SAAAH,GAAK,MAAA,mBAAkBA,GAAK,GAAC,KACnCI,aAAc,SAAAJ,GAAK,MAAA,mBAAkBA,GAAK,GAAC,KAC3CK,iBAAkB,SAAAL,GAAK,MAAA,qBAAoBA,GAAK,GAAC,KACjDM,UAAW,SAAAN,GAAK,MAAA,mBAAkBA,GAAK,GAAC,KACxCO,eAAgB,SAAAP,GAAK,MAAA,kBAAiBA,GAAK,GAAC,KAC5CQ,QAAS,SAAAR,GAAK,MAAA,mBAAkBA,GAAK,GAAC,MAG3BS,IAA6BC,EAAA,IACvCC,OAAOC,EAAAA,MAAMlB,KAAW,QAEzBgB,EAACC,OAAOE,EAAAA,OAAOrB,KAAQ,SACvBkB,EAACC,OAAOG,EAAAA,YArGE,KAqGkB,cAC5BJ,EAACC,OAAOI,EAAAA,WAtGE,KAsGiB,aAC3BL,EAACC,OAAOK,EAAAA,aAAaxB,EAAKE,KAAW,eACrCgB,EAACC,OAAOM,EAAAA,WAAWvB,KAAW,aAC9BgB,EAACC,OAAOO,EAAAA,WAAWxB,KAAW,aAC9BgB,EAACC,OAAOQ,EAAAA,eAAgB,aACxBT,EAACC,OAAOS,EAAAA,cAAc,CAAC5B,MAAS,gBAChCkB,EAACC,OAAOtB,EAAAA,WAAY,SAIpBqB,EAACC,OAAOU,EAAAA,UAAW,QACnBX,EAACC,OAAOW,EAAAA,SAAS5B,KAAW,WAC5BgB,EAACC,OAAOY,EAAAA,aAlHE,KAkHmB,eAC7Bb,EAACC,OAAOa,EAAAA,mBAAoB,iBAC5Bd,EAACC,OAAOc,EAAAA,MApHE,KAoHY,QACtBf,EAACC,OAAOe,EAAAA,UAAUhC,KAAW,YAC7BgB,EAACC,OAAOgB,EAAAA,kBAAmB,gBAC3BjB,EAACC,OAAOiB,EAAAA,aAAc,WACtBlB,EAACC,OAAOkB,EAAAA,yBAA0B,uBAElCnB,EAACC,OAAOmB,EAAAA,UA1HE,KA0HgB,YAC1BpB,EAACC,OAAOoB,EAAAA,YAAa,UACrBrB,EAACC,OAAOqB,EAAAA,MAAMrC,KAAS,QACvBe,EAACC,OAAOsB,EAAAA,YAAa,UACrBvB,EAACC,OAAOuB,EAAAA,WAAWxC,KAAW,aAC9BgB,EAACC,OAAOwB,EAAAA,OAAOzC,KAAW,SAC1BgB,EAACC,OAAOT,EAAAA,OAAOP,KAAS,SACxBe,EAACC,OAAOyB,EAAAA,SAAS1C,KAAW,WAC5BgB,EAACC,OAAO0B,EAAAA,KAAK1C,KAAS,OACtBe,EAACC,OAAO2B,EAAAA,UAAU3C,KAAS,YAC3Be,EAACC,OAAO4B,EAAAA,UAAW,QACnB7B,EAACC,OAAO6B,EAAAA,QAAQ9C,KAAW,UAC3BgB,EAACC,OAAO8B,EAAAA,mBAAoB,iBAC5B/B,EAACC,OAAO+B,EAAAA,YAAa,UACrBhC,EAACC,OAAOgC,EAAAA,SAAU,OAClBjC,EAACC,OAAOiC,EAAAA,IAAIlD,KAAW,MACvBgB,EAACC,OAAOkC,EAAAA,MAAMnD,KAAW,QACzBgB,EAACC,OAAOmC,EAAAA,gBAAiB,cAEzBpC,EAACC,OAAOoC,EAAAA,UAAW,QAEnBrC,EAACC,OAAOqC,EAAAA,SAAStD,KAAW,WAG5BgB,EAACC,OAAOsC,EAAAA,UAAUvD,EAlJR,KAkJwB,YAElCgB,EAACC,OAAOL,EAAAA,UAAU,IAAI4C,EAAAA,WAAc,YACpCxC,EAACC,OAAOwC,EAAAA,UAAUC,EAAAA,iBAAkB,YACpC1C,EAACC,OAAO0C,EAAAA,sBAAuB,oBAC/B3C,EAACC,OAAO2C,EAAAA,aAAc,WACtB5C,EAACC,OAAO4C,EAAAA,UAAU5D,KAAS,YAC3Be,EAACC,OAAO6C,EAAAA,MAAM,MAAO,QAErB9C,EAACC,OAAO8C,EAAAA,gBAAgB/D,KAAW,kBACnCgB,EAACC,OAAO+C,EAAAA,gBAAiB,cACzBhD,EAACC,OAAOgD,EAAAA,kBAAmB,gBAC3BjD,EAACC,OAAOiD,EAAAA,SAAU,OAClBlD,EAACC,OAAOkD,EAAAA,OAAOnE,KAAW,SAC1BgB,EAACC,OAAOmD,EAAAA,WAAY,SACpBpD,EAACC,OAAOoD,EAAAA,WAAWrE,KAAW,aAC9BgB,EAACC,OAAOqD,EAAAA,UAAW,QACnBtD,EAACC,OAAOsD,EAAAA,UAAUvE,KAAW,YAC7BgB,EAACC,OAAOuD,EAAAA,aAAc,WACtBxD,EAACC,OAAOwD,EAAAA,OAAO3E,KAAQ,SACvBkB,EAACC,OAAOyD,EAAAA,WAtKE,KAsKiB,aAC3B1D,EAACC,OAAO0D,EAAAA,KAAK3E,KAAW,OACxBgB,EAACC,OAAO2D,EAAAA,cAAc9E,KAAQ,gBAC9BkB,EAACC,OAAO4D,EAAAA,UAAW,QACnB7D,EAACC,OAAO6D,EAAAA,gBAAiB,cACzB9D,EAACC,OAAO8D,EAAAA,WAAY,SACpB/D,EAACC,OAAO+D,EAAAA,KA5KE,KA4KW,OACrBhE,EAACC,OAAOgE,EAAAA,SA7KE,KA6Ke,WACzBjE,EAACC,OAAOiE,EAAAA,UAAUpF,KAAQ,YAC1BkB,EAACC,OAAOkE,EAAAA,UAAUlF,KAAS,YAC3Be,EAACC,OAAOmE,EAAAA,UAAUpF,KAAW,YAC7BgB,EAACC,OAAOoE,EAAAA,YAAY3B,EAAAA,iBAAkB,cAEtC1C,EAACC,OAAOqE,EAAAA,UAAUtF,KAAW,YAE7BgB,EAACC,OAAOsE,EAAAA,KArLE,KAqLW,OACrBvE,EAACC,OAAOuE,EAAAA,SAtLE,KAsLe,WACzBxE,EAACC,OAAOwE,EAAAA,UAAU3F,KAAQ,YAC1BkB,EAACC,OAAOyE,EAAAA,UAAUzF,KAAS,YAC3Be,EAACC,OAAO0E,EAAAA,IAAI3F,KAAW,MACvBgB,EAACC,OAAO2E,EAAAA,SAAS5F,KAAW,WAC5BgB,EAACC,OAAO4E,EAAAA,aA3LE,KA2LmB,eAC7B7E,EAACC,OAAO6E,EAAAA,aAAa9F,KAAW,eAChCgB,EAACC,OAAO8E,EAAAA,aAAarC,EAAAA,iBAAkB,eAEvC1C,EAACC,OAAO+E,EAAAA,YA/LE,EA+LelG,KAAQ,cAEjCkB,EAACC,OAAOgF,EAAAA,YAAa,UACrBjF,EAACC,OAAOiF,EAAAA,YAlME,KAkMkB,cAC5BlF,EAACC,OAAOkF,EAAAA,WAnME,KAmMiB,aAC3BnF,EAACC,OAAOmF,EAAAA,aAAatG,EAAKE,KAAW,eACrCgB,EAACC,OAAOoF,EAAAA,WAAWrG,KAAW,aAC9BgB,EAACC,OAAOqF,EAAAA,mBAAoB,iBAC5BtF,EAACC,OAAOsF,EAAAA,QAAS,MACjBvF,EAACC,OAAOuF,EAAAA,WAAY,YAGTC,EAAqB,CAChCC,OAAQ,oBAGVpI,OAAOqI,QA1MuB,CAC5BtG,YAAa,CAAC,iBAAkB,QAAS,OAAQ,YAAa,UAAW,gBACzEE,cAAe,CAAC,aAAc,QAAS,YAAa,qBACpDC,OAAQ,CACN,OACA,WACA,YACA,YACA,QACA,WACA,eACA,WACA,uBACA,YACA,SACA,QACA,iBACA,OACA,SACA,aACA,SACA,OACA,WACA,YACA,YACA,WACA,gBAEFC,KAAM,CAAC,aAAc,YAAa,UAAW,iBAAkB,WAC/DC,aAAc,CAAC,gBAAiB,SAAU,QAAS,YAAa,OAAQ,MAAO,UAC/EC,iBAAkB,CAAC,QAAS,UAC5BC,UAAW,CACT,QACA,YACA,cACA,kBACA,cACA,iBAEFC,eAAgB,CACd,MACA,QACA,SACA,cACA,aACA,eACA,aACA,YACA,aACA,WACA,QACA,OACA,SACA,UACA,WACA,YACA,cACA,aACA,eACA,cAEFC,QAAS,CACP,QACA,YACA,WACA,gBACA,cACA,MACA,YACA,WACA,UACA,SACA,aACA,gBACA,cACA,eACA,iBA8HkC8F,SAAQ,SAAC5F,OAAA6F,EAAArI,EAAAwC,EAAA,GAAC8F,EAAGD,EAAA,GAAEE,EAAGF,EAAA,GAChDG,EAAO,GAAMD,EAAIrH,OACvBqH,EAAIH,SAAQ,SAACK,EAAIjI,GACfyH,EAAmBQ,GAAM7G,EAA6B0G,IAAM,EAAIE,EAAOhI,GAAGkI,QAAQ,UC1StF,IAAMC,EAAS,KAEfC,EAAA,WAmBE,SAAAA,EACWC,EACTC,EACQC,EACAC,GAHCC,KAAAJ,WAAAA,EAEDI,KAAAF,YAAAA,EACAE,KAAAD,UAAAA,EAXOC,KAAAC,sBAAwB,GACjCD,KAAAE,+BAAiC,EAGjCF,KAAAG,SAAW,EASjBH,KAAKI,SAAWR,EAAa,YAC7BI,KAAKK,OAAST,EAAa,UAC3BI,KAAKM,gBAAkBV,EAAa,iBACpCI,KAAKO,WAAaX,EAAa,cAC/BI,KAAKQ,aAAeZ,EAAa,gBACjCI,KAAKS,QAAU,EACfT,KAAKU,IACHV,KAAKS,QACLE,KAAKC,IACHZ,KAAKI,SAASnI,OACd+H,KAAKK,OAAOpI,OACZ+H,KAAKM,gBAAgBrI,OACrB+H,KAAKQ,aAAavI,QAGtB+H,KAAKa,cAAgB,CAAC,UAAU3I,OAC9B2H,EAAUpE,KAAI,SAAA+D,GAAM,OAAAlG,EAA8BE,OAAOgG,KAAQ,OAEnEQ,KAAKc,eAAiBd,KAAKa,cAAcnE,QAAO,SAAC7D,EAAGkI,GAAM,OAAClI,EAAEZ,OAAS8I,EAAE9I,OAASY,EAAIkI,KAAI9I,cAG3F0H,EAAAqB,UAAAC,SAAA,WACE,IAAMC,EAAMlB,KAAKI,SAASe,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KAC1DU,QAAQC,IAAIrB,KAAKsB,SAAS,GAAK5B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,QAGpF7B,EAAAqB,UAAAS,UAAA,WACE,GACGtJ,GAAqBA,IAAsB6H,KAAKJ,YAChDxH,GACCA,IAAgC4H,KAAK0B,4BACvC,CACA,IAAMR,EAAMlB,KAAKJ,WAAWuB,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KAC5DU,QAAQC,IAAIrB,KAAKsB,SAAS,GAAK5B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,SAItF7B,EAAAqB,UAAAW,OAAA,WACE,IAAMT,EAAMlB,KAAKK,OAAOc,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KACxDU,QAAQC,IAAI3B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,MAAQxB,KAAKsB,SAAS,KAGvF3B,EAAAqB,UAAAY,YAAA,SAAYC,EAAiBhK,GAC3B,IAAMiK,EAAiB9B,KAAKa,cAAcgB,GAEpCE,GADavI,OAAOqI,GAASL,SAAS,EAAG,KACN,IAAMM,GAAQX,OAAOnB,KAAKc,eAAiB,EAAG,KACjFkB,GAAqB,GAAGhC,KAAK0B,6BAChCF,SAASxB,KAAKE,+BAAgC,KAC9CiB,OAAOnB,KAAKE,+BAAiC,EAAG,KAEnDkB,QAAQC,IACN3B,GAAUM,KAAKD,UAAY,GAAK,MAAQgC,EAAqBC,EAC7DhC,KAAKD,UACD,GACA,UAAUf,EAAmB8C,GAAO,+DACnB,IAArB9B,KAAKF,YAAuB,GAAKjI,GAGnCM,EAAoB6H,KAAKJ,WACzBxH,EAA8B4H,KAAK0B,6BAGrC/B,EAAAqB,UAAAiB,QAAA,SAAQJ,SACAC,EAAiB9B,KAAKa,cAAcgB,GAE1C7B,KAAKC,sBAAsB4B,EAAUC,IACU,QAA7CvI,EAACyG,KAAKC,sBAAsB4B,EAAUC,UAAO,IAAAvI,EAAAA,EAAI,GAAK,EACxDyG,KAAK0B,4BACH1B,KAAKC,sBAAsB4B,EAAUC,GAAU,EAC3C,KAAK9B,KAAKC,sBAAsB4B,EAAUC,GAAO,IACjD,GAEN9B,KAAKE,+BAAiCS,KAAKC,IACzCZ,KAAKE,+BACLF,KAAK0B,4BAA4BzJ,SAIrC0H,EAAAqB,UAAAkB,gBAAA,WACElC,KAAKG,WACLH,KAAKuB,YAAcvB,KAAKG,SAAW,EAAI,KAAKH,KAAKG,SAAa,GAC9D,IAAMe,EAAMlB,KAAKM,gBAAgBa,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KACjEU,QAAQC,IACNrB,KAAKsB,SAAS,GAAK5B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,MAAQxB,KAAKsB,SAAS,KAIhG3B,EAAAqB,UAAAmB,WAAA,WACE,IAAMjB,EAAMlB,KAAKO,WAAWY,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KAC5DU,QAAQC,IACNrB,KAAKsB,SAAS,GAAK5B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,MAAQxB,KAAKsB,SAAS,KAIhG3B,EAAAqB,UAAAoB,aAAA,WACE,IAAMlB,EAAMlB,KAAKQ,aAAaW,OAAOnB,KAAKS,QAAUT,KAAKU,IAAK,KAC9DU,QAAQC,IACNrB,KAAKsB,SAAS,GAAK5B,EAASwB,EAAMlB,KAAKuB,YAAYC,SAAS,EAAG,KAAO,MAAQxB,KAAKsB,SAAS,KAIxF3B,EAAAqB,UAAAM,SAAA,SAASrK,GACf,OAAO+I,KAAKD,UAAY,GAAKsC,MAAMpL,GAAGqL,KAAK,MAAMtJ,KAAK,OA/H1D,GCDIuJ,EAAiB,gBAqCCC,EAAkBC,SAChCC,EAAK,IAAIC,EAAAA,WACfD,EAAGzD,OAASuD,EACZA,EAAIE,EAEJD,EAAUA,GAAW,GACrB,IAIIG,EAJEhD,EAAqBpG,OAAiB,QAAXD,EAACkJ,EAAQI,UAAE,IAAAtJ,EAAAA,IAAMgJ,GAE5CO,EAAcN,EAAEO,UAChBC,EAASR,EAAES,KAsDjB,OAnDAT,EAAES,KAAO,eAAU,IAAAC,EAAA,GAAAxK,EAAA,EAAAA,EAAAV,UAAAC,OAAAS,IAAAmH,EAAAA,GAAAA,UAAAA,GAIjB,IAFA,IAAMsD,GADNP,EAAS,IAAIjD,EAAOC,EAAYC,EAAW4C,EAAQ3C,YAAa2C,EAAQ1C,YAC9Cc,cAAc5I,kBAE/BV,GACP,IAAM6L,EAASlF,EAAAA,KAAI,SAAArG,GACjB+K,EAAOX,QAAQ1K,GAEL,IAANA,EACFqL,EAAO3B,WAEP2B,EAAOnB,YAGTmB,EAAOhB,YAAYrK,EAAGM,GAElBN,IAAM4L,EAAa,GACrBP,EAAOjB,YAIX9B,EAAUwD,OAAO9L,EAAIA,EAAG,EAAG6L,IAjBpB7L,EAAI,EAAGA,EAAI4L,EAAY5L,MAAvBA,GAmBT,GAAgC,iBAArBkL,EAAQa,SACjB,CAAA,IAAMC,EAAUjJ,EAAAA,MAAMmI,EAAQa,UACxBE,EAAkB3D,EAAU5H,OAClC,IAASV,EAAI,EAAGA,EAAIiM,EAAiBjM,IACnCsI,EAAUwD,OAAO9L,EAAIA,EAAG,EAAGgM,GAW/B,OARA1D,EAAUjI,KACRmC,EAAAA,YAAW,SAAA0J,GAET,OADAb,EAAOT,aACAuB,EAAAA,WAAWD,OAGtB5D,EAAUjI,KAAKsG,EAAAA,IAAI,CAACyF,SAAU,WAAM,OAAAf,EAAOR,mBAEpCY,EAAOY,MAAM5D,KAAMH,IAG5B2C,EAAEO,UAAY,eAAU,IAAAtK,EAAA,GAAAC,EAAA,EAAAA,EAAAV,UAAAC,OAAAS,IAAAD,EAAAC,GAAAV,UAAAU,GACtB,IAAKkK,EAAQ,CACX,IAAMiB,EAAmBrB,EAAES,OAC3B,OAAOY,EAAiBd,UAASa,MAA1BC,EAAgB9L,EAAcU,IAIvC,OADAmK,EAAOV,kBACAY,EAAYc,MAAM5D,KAAMvH,IAG1B+J","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {asapScheduler, of, Subject} from 'rxjs';\nimport {\n  audit,\n  buffer,\n  bufferCount,\n  bufferTime,\n  bufferToggle,\n  bufferWhen,\n  catchError,\n  combineAll,\n  combineLatest,\n  concat,\n  count,\n  debounce,\n  debounceTime,\n  defaultIfEmpty,\n  delay,\n  delayWhen,\n  dematerialize,\n  distinct,\n  distinctUntilChanged,\n  elementAt,\n  endWith,\n  every,\n  exhaust,\n  exhaustMap,\n  expand,\n  filter,\n  finalize,\n  find,\n  findIndex,\n  first,\n  groupBy,\n  ignoreElements,\n  isEmpty,\n  last,\n  map,\n  mapTo,\n  materialize,\n  merge,\n  mergeMap,\n  mergeScan,\n  multicast,\n  observeOn,\n  onErrorResumeNext,\n  pairwise,\n  partition,\n  pluck,\n  publishBehavior,\n  publishLast,\n  publishReplay,\n  race,\n  reduce,\n  refCount,\n  repeat,\n  repeatWhen,\n  retry,\n  retryWhen,\n  sample,\n  sampleTime,\n  scan,\n  sequenceEqual,\n  share,\n  shareReplay,\n  single,\n  skip,\n  skipLast,\n  skipUntil,\n  skipWhile,\n  startWith,\n  subscribeOn,\n  switchMap,\n  take,\n  takeLast,\n  takeUntil,\n  takeWhile,\n  tap,\n  throttle,\n  throttleTime,\n  throwIfEmpty,\n  timeInterval,\n  timeoutWith,\n  toArray,\n  windowCount,\n  windowTime,\n  windowToggle,\n  windowWhen,\n  withLatestFrom,\n  zip,\n  zipAll,\n} from 'rxjs/operators';\n\nconst NUM = 5;\nconst OF$ = of(1);\nconst MAPPER = () => OF$;\nconst NOOP = (...args: any[]): any => {};\n\nconst OPERATORS_BY_CATEGORY = {\n  conditional: ['defaultIfEmpty', 'every', 'find', 'findIndex', 'isEmpty', 'throwIfEmpty'],\n  errorHandling: ['catchError', 'retry', 'retryWhen', 'onErrorResumeNext'],\n  filter: [\n    'take',\n    'takeLast',\n    'takeUntil',\n    'takeWhile',\n    'audit',\n    'debounce',\n    'debounceTime',\n    'distinct',\n    'distinctUntilChanged',\n    'elementAt',\n    'filter',\n    'first',\n    'ignoreElements',\n    'last',\n    'sample',\n    'sampleTime',\n    'single',\n    'skip',\n    'skipLast',\n    'skipUntil',\n    'skipWhile',\n    'throttle',\n    'throttleTime',\n  ],\n  join: ['combineAll', 'startWith', 'exhaust', 'withLatestFrom', 'endWith'],\n  joinCreation: ['combineLatest', 'concat', 'merge', 'partition', 'race', 'zip', 'zipAll'],\n  mathAndAggregate: ['count', 'reduce'],\n  multicast: [\n    'share',\n    'multicast',\n    'shareReplay',\n    'publishBehavior',\n    'publishLast',\n    'publishReplay',\n  ],\n  transformation: [\n    'map',\n    'mapTo',\n    'buffer',\n    'bufferCount',\n    'bufferTime',\n    'bufferToggle',\n    'bufferWhen',\n    'switchMap',\n    'exhaustMap',\n    'pairwise',\n    'pluck',\n    'scan',\n    'expand',\n    'groupBy',\n    'mergeMap',\n    'mergeScan',\n    'windowCount',\n    'windowTime',\n    'windowToggle',\n    'windowWhen',\n  ],\n  utility: [\n    'delay',\n    'delayWhen',\n    'finalize',\n    'dematerialize',\n    'materialize',\n    'tap',\n    'observeOn',\n    'refCount',\n    'toArray',\n    'repeat',\n    'repeatWhen',\n    'sequenceEqual',\n    'subscribeOn',\n    'timeInterval',\n    'timeoutWith',\n  ],\n};\n\nconst COLOR_GENERATORS_BY_CATEGORY = {\n  conditional: a => `rgba(200,200,200,${a || 1})`,\n  errorHandling: a => `rgba(255,0,120,${a || 1})`,\n  filter: a => `rgba(255,255,0,${a || 1})`,\n  join: a => `rgba(0,125,255,${a || 1})`,\n  joinCreation: a => `rgba(255,100,0,${a || 1})`,\n  mathAndAggregate: a => `rgba(200,200,200,${a || 1})`,\n  multicast: a => `rgba(0,255,217,${a || 1})`,\n  transformation: a => `rgba(17,255,0,${a || 1})`,\n  utility: a => `rgba(245,0,255,${a || 1})`,\n};\n\nexport const OPERATORS_BY_RETURNED_FN_BODY = {\n  [String(audit(MAPPER))]: 'audit',\n  // [String(auditTime(NUM))]: 'auditTime', // audit\n  [String(buffer(OF$))]: 'buffer',\n  [String(bufferCount(NUM))]: 'bufferCount',\n  [String(bufferTime(NUM))]: 'bufferTime',\n  [String(bufferToggle(OF$, MAPPER))]: 'bufferToggle',\n  [String(bufferWhen(MAPPER))]: 'bufferWhen',\n  [String(catchError(MAPPER))]: 'catchError',\n  [String(combineAll())]: 'combineAll',\n  [String(combineLatest([OF$]))]: 'combineLatest',\n  [String(concat())]: 'concat',\n  // [String(concatAll())]: 'concatAll', // mergeMap\n  // [String(concatMap(MAPPER))]: 'concatMap', // mergeMap\n  // [String(concatMapTo(MAPPER))]: 'concatMapTo', // mergeMap\n  [String(count())]: 'count',\n  [String(debounce(MAPPER))]: 'debounce',\n  [String(debounceTime(NUM))]: 'debounceTime',\n  [String(defaultIfEmpty())]: 'defaultIfEmpty',\n  [String(delay(NUM))]: 'delay',\n  [String(delayWhen(MAPPER))]: 'delayWhen',\n  [String(dematerialize())]: 'dematerialize',\n  [String(distinct())]: 'distinct',\n  [String(distinctUntilChanged())]: 'distinctUntilChanged',\n  // [String(distinctUntilKeyChanged<[]>(NUM))]: 'distinctUntilKeyChanged', // distinctUntilChanged\n  [String(elementAt(NUM))]: 'elementAt',\n  [String(endWith())]: 'endWith',\n  [String(every(NOOP))]: 'every',\n  [String(exhaust())]: 'exhaust',\n  [String(exhaustMap(MAPPER))]: 'exhaustMap',\n  [String(expand(MAPPER))]: 'expand',\n  [String(filter(NOOP))]: 'filter',\n  [String(finalize(MAPPER))]: 'finalize',\n  [String(find(NOOP))]: 'find',\n  [String(findIndex(NOOP))]: 'findIndex',\n  [String(first())]: 'first',\n  [String(groupBy(MAPPER))]: 'groupBy',\n  [String(ignoreElements())]: 'ignoreElements',\n  [String(isEmpty())]: 'isEmpty',\n  [String(last())]: 'last',\n  [String(map(MAPPER))]: 'map',\n  [String(mapTo(MAPPER))]: 'mapTo',\n  [String(materialize())]: 'materialize',\n  // [String(max())]: 'max', // reduce\n  [String(merge())]: 'merge',\n  // [String(mergeAll())]: 'mergeAll', // mergeMap\n  [String(mergeMap(MAPPER))]: 'mergeMap',\n  // [String(flatMap(MAPPER))]: 'flatMap', // mergeMap\n  // [String(mergeMapTo(MAPPER))]: 'mergeMapTo', // mergeMap\n  [String(mergeScan(MAPPER, NUM))]: 'mergeScan',\n  // [String(min())]: 'min', // reduce\n  [String(multicast(new Subject()))]: 'multicast',\n  [String(observeOn(asapScheduler))]: 'observeOn',\n  [String(onErrorResumeNext())]: 'onErrorResumeNext',\n  [String(pairwise())]: 'pairwise',\n  [String(partition(NOOP))]: 'partition',\n  [String(pluck(''))]: 'pluck',\n  // [String(publish())]: 'publish', // multicast\n  [String(publishBehavior(MAPPER))]: 'publishBehavior',\n  [String(publishLast())]: 'publishLast',\n  [String(publishReplay())]: 'publishReplay',\n  [String(race())]: 'race',\n  [String(reduce(MAPPER))]: 'reduce',\n  [String(repeat())]: 'repeat',\n  [String(repeatWhen(MAPPER))]: 'repeatWhen',\n  [String(retry())]: 'retry',\n  [String(retryWhen(MAPPER))]: 'retryWhen',\n  [String(refCount())]: 'refCount',\n  [String(sample(OF$))]: 'sample',\n  [String(sampleTime(NUM))]: 'sampleTime',\n  [String(scan(MAPPER))]: 'scan',\n  [String(sequenceEqual(OF$))]: 'sequenceEqual',\n  [String(share())]: 'share',\n  [String(shareReplay())]: 'shareReplay',\n  [String(single())]: 'single',\n  [String(skip(NUM))]: 'skip',\n  [String(skipLast(NUM))]: 'skipLast',\n  [String(skipUntil(OF$))]: 'skipUntil',\n  [String(skipWhile(NOOP))]: 'skipWhile',\n  [String(startWith(MAPPER))]: 'startWith',\n  [String(subscribeOn(asapScheduler))]: 'subscribeOn',\n  // [String(switchAll())]: 'switchAll', // switchMap\n  [String(switchMap(MAPPER))]: 'switchMap',\n  // [String(switchMapTo(OF$))]: 'switchMapTo', // switchMap\n  [String(take(NUM))]: 'take',\n  [String(takeLast(NUM))]: 'takeLast',\n  [String(takeUntil(OF$))]: 'takeUntil',\n  [String(takeWhile(NOOP))]: 'takeWhile',\n  [String(tap(MAPPER))]: 'tap',\n  [String(throttle(MAPPER))]: 'throttle',\n  [String(throttleTime(NUM))]: 'throttleTime',\n  [String(throwIfEmpty(MAPPER))]: 'throwIfEmpty',\n  [String(timeInterval(asapScheduler))]: 'timeInterval',\n  // [String(timeout(NUM))]: 'timeout', // timeoutWith\n  [String(timeoutWith(NUM, OF$))]: 'timeoutWith',\n  // [String(timestamp(asapScheduler))]: 'timestamp', // map\n  [String(toArray())]: 'toArray',\n  [String(windowCount(NUM))]: 'windowCount',\n  [String(windowTime(NUM))]: 'windowTime',\n  [String(windowToggle(OF$, MAPPER))]: 'windowToggle',\n  [String(windowWhen(MAPPER))]: 'windowWhen',\n  [String(withLatestFrom())]: 'withLatestFrom',\n  [String(zip())]: 'zip',\n  [String(zipAll())]: 'zipAll',\n};\n\nexport const COLORS_BY_OPERATOR = {\n  source: 'rgb(240,240,240)',\n};\n\nObject.entries(OPERATORS_BY_CATEGORY).forEach(([cat, ops]) => {\n  const span = 0.3 / ops.length;\n  ops.forEach((op, i) => {\n    COLORS_BY_OPERATOR[op] = COLOR_GENERATORS_BY_CATEGORY[cat]((1 - span * i).toFixed(2));\n    /*console.log(\n      `%c ${op} `,\n      `background-color: #000; padding: 3px; border-radius: 6px;color: ${colorGenByCat[cat](\n        1 - span * i\n      )}`\n    );*/\n  });\n});\n","import {COLORS_BY_OPERATOR, OPERATORS_BY_RETURNED_FN_BODY} from './meta';\n\nlet lastLogDebuggerId: string;\nlet lastLogOperatorExecCountMsg: string;\nconst PREFIX = '➰ ';\n\nexport class Logger {\n  private readonly startMsg: string;\n  private readonly endMsg: string;\n  private readonly subscriptionMsg: string;\n  private readonly completedMsg: string;\n  private readonly erroredMsg: string;\n  private readonly basePad: number;\n  private readonly pad: number;\n\n  readonly operatorNames: string[];\n  private readonly longestNameLen: number;\n\n  private readonly operatorsExecCountMap = {};\n  private longestOperatorExecCountMsgLen = 0;\n  private currentOperatorExecCountMsg: string;\n\n  private subCount = 0;\n  private subCountMsg: string;\n\n  constructor(\n    readonly debuggerId: string,\n    operators: any[],\n    private hideOutputs: boolean,\n    private noStyling: boolean\n  ) {\n    this.startMsg = debuggerId + ' >> START';\n    this.endMsg = debuggerId + ' >> END';\n    this.subscriptionMsg = debuggerId + ' >> SUBSCRIBED';\n    this.erroredMsg = debuggerId + ' >> ERRORED';\n    this.completedMsg = debuggerId + ' >> COMPLETED';\n    this.basePad = 7;\n    this.pad =\n      this.basePad +\n      Math.max(\n        this.startMsg.length,\n        this.endMsg.length,\n        this.subscriptionMsg.length,\n        this.completedMsg.length\n      );\n\n    this.operatorNames = ['source'].concat(\n      operators.map(op => OPERATORS_BY_RETURNED_FN_BODY[String(op)] || '')\n    );\n    this.longestNameLen = this.operatorNames.reduce((a, b) => (a.length > b.length ? a : b)).length;\n  }\n\n  logStart(): void {\n    const msg = this.startMsg.padEnd(this.basePad + this.pad, '_');\n    console.log(this.newLines(2) + PREFIX + msg + this.subCountMsg.padStart(4, '_') + '__▽');\n  }\n\n  logResume(): void {\n    if (\n      (lastLogDebuggerId && lastLogDebuggerId !== this.debuggerId) ||\n      (lastLogOperatorExecCountMsg &&\n        lastLogOperatorExecCountMsg !== this.currentOperatorExecCountMsg)\n    ) {\n      const msg = this.debuggerId.padEnd(this.basePad + this.pad, '_');\n      console.log(this.newLines(2) + PREFIX + msg + this.subCountMsg.padStart(4, '_') + '___');\n    }\n  }\n\n  logEnd(): void {\n    const msg = this.endMsg.padEnd(this.basePad + this.pad, '‾');\n    console.log(PREFIX + msg + this.subCountMsg.padStart(4, '‾') + '‾‾△' + this.newLines(3));\n  }\n\n  logOperator(opIndex: number, value): void {\n    const opName: string = this.operatorNames[opIndex];\n    const opIndexStr = String(opIndex).padStart(2, ' ');\n    const paddedIndexAndName = (opIndexStr + ' ' + opName).padEnd(this.longestNameLen + 4, ' ');\n    const paddedExecCountMsg = `${this.currentOperatorExecCountMsg}`\n      .padStart(this.longestOperatorExecCountMsgLen, ' ')\n      .padEnd(this.longestOperatorExecCountMsgLen + 1, ' ');\n\n    console.log(\n      PREFIX + (this.noStyling ? '' : '%c') + paddedIndexAndName + paddedExecCountMsg,\n      this.noStyling\n        ? ''\n        : `color: ${COLORS_BY_OPERATOR[opName]}; background-color: #000; padding: 3px; border-radius: 6px;`,\n      this.hideOutputs === true ? '' : value\n    );\n\n    lastLogDebuggerId = this.debuggerId;\n    lastLogOperatorExecCountMsg = this.currentOperatorExecCountMsg;\n  }\n\n  prepare(opIndex: number): void {\n    const opName: string = this.operatorNames[opIndex];\n\n    this.operatorsExecCountMap[opIndex + opName] =\n      (this.operatorsExecCountMap[opIndex + opName] ?? 0) + 1;\n    this.currentOperatorExecCountMsg =\n      this.operatorsExecCountMap[opIndex + opName] > 1\n        ? ` (${this.operatorsExecCountMap[opIndex + opName]})`\n        : '';\n\n    this.longestOperatorExecCountMsgLen = Math.max(\n      this.longestOperatorExecCountMsgLen,\n      this.currentOperatorExecCountMsg.length\n    );\n  }\n\n  addSubscription(): void {\n    this.subCount++;\n    this.subCountMsg = this.subCount > 1 ? `S:${this.subCount}` : '';\n    const msg = this.subscriptionMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▼' + this.newLines(2)\n    );\n  }\n\n  logErrored(): void {\n    const msg = this.erroredMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▲' + this.newLines(2)\n    );\n  }\n\n  logCompleted(): void {\n    const msg = this.completedMsg.padEnd(this.basePad + this.pad, '-');\n    console.log(\n      this.newLines(1) + PREFIX + msg + this.subCountMsg.padStart(4, '-') + '--▲' + this.newLines(2)\n    );\n  }\n\n  private newLines(n: number): string {\n    return this.noStyling ? '' : Array(n).fill('\\n').join('');\n  }\n}\n","import {Observable, Subscription, throwError} from 'rxjs';\nimport {catchError, delay, tap} from 'rxjs/operators';\nimport {Logger} from './logger';\nimport {DebuggerOptions} from './models';\n\nlet debuggersCount = 0;\n\n/**\n * RxJS-Debug wrapper function, to enable automated logging for Observables and Streams.\n *\n * When an Observable is wrapped with this function,\n * it returns the same Observable after injecting the logging hooks into it.\n *\n * It overrides the `subscribe` and `pipe` methods and\n * replaces them with the custom trapped versions to achieve the expected monitoring and logging behavior.\n *\n * @example\n * ```ts\n * // raw Observable\n * const source$ = of(1, 2, 3)\n *\n * // wrapped Observable with automatic logging enabled\n * const sourceWithAutomaticLogging$ = $D(source$)\n *\n * // subscribe to start the logging\n * sourceWithAutomaticLogging$.subscribe()\n *\n * // you'll see the logging in the console\n *\n * // the target use-case would be when there are multiple operators applied\n * $D(source$).pipe(\n *   map(x => x + 5),\n *   switchMap(x => of(x * 2)),\n * )\n *\n * // you'll see even more detailed and useful logging in the console\n * ```\n *\n * @param $ The Observable that needs to be debugged.\n * @param options Configuration options for RxJS-Debug instance.\n * @returns A copy of the passed Observable, with logging enabled.\n */\nexport function $D<T>($: Observable<T>, options?: DebuggerOptions): Observable<T> {\n  const d$ = new Observable<T>();\n  d$.source = $;\n  $ = d$;\n\n  options = options || {};\n  const debuggerId: string = String(options.id ?? ++debuggersCount);\n\n  const ogSubscribe = $.subscribe;\n  const ogPipe = $.pipe;\n  let logger: Logger;\n\n  $.pipe = function (...operators: any): Observable<T> {\n    logger = new Logger(debuggerId, operators, options.hideOutputs, options.noStyling);\n    const injections = logger.operatorNames.length;\n\n    for (let i = 0; i < injections; i++) {\n      const tapper = tap(value => {\n        logger.prepare(i);\n\n        if (i === 0) {\n          logger.logStart();\n        } else {\n          logger.logResume();\n        }\n\n        logger.logOperator(i, value);\n\n        if (i === injections - 1) {\n          logger.logEnd();\n        }\n      });\n\n      operators.splice(i + i, 0, tapper);\n    }\n    if (typeof options.addDelay === 'number') {\n      const delayer = delay(options.addDelay);\n      const totalInjections = operators.length;\n      for (let i = 0; i < totalInjections; i++) {\n        operators.splice(i + i, 0, delayer);\n      }\n    }\n    operators.push(\n      catchError(err => {\n        logger.logErrored();\n        return throwError(err);\n      })\n    );\n    operators.push(tap({complete: () => logger.logCompleted()}));\n\n    return ogPipe.apply(this, operators);\n  };\n\n  $.subscribe = function (...args): Subscription {\n    if (!logger) {\n      const tappedObservable = $.pipe();\n      return tappedObservable.subscribe(...args);\n    }\n\n    logger.addSubscription();\n    return ogSubscribe.apply(this, args);\n  };\n\n  return $;\n}\n"]}