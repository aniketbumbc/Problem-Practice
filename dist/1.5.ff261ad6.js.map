{"version":3,"sources":["1.5.js"],"names":["findAnnagram","str1","str2","charOccr1","findOccurance","charOccr2","Object","keys","length","char","str","tempObj","undefined","console","log"],"mappings":";;;;;;AAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,MAAMC,SAAS,GAAGC,aAAa,CAACH,IAAD,CAA/B;AACA,MAAMI,SAAS,GAAGD,aAAa,CAACF,IAAD,CAA/B;;AAEA,MAAII,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,MAAvB,KAAkCF,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,MAA7D,EAAqE;AACnE,WAAO,KAAP;AACD;;AAED,OAAK,IAAIC,IAAT,IAAiBN,SAAjB,EAA4B;AAC1B,QAAIA,SAAS,CAACM,IAAD,CAAT,KAAoBJ,SAAS,CAACI,IAAD,CAAjC,EAAyC;AACvC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED,SAASL,aAAT,CAAuBM,GAAvB,EAA4B;AAC1B,MAAIC,OAAO,GAAG,EAAd;;AAD0B,6CAGTD,GAHS;AAAA;;AAAA;AAG1B,wDAAsB;AAAA,UAAbD,IAAa;;AACpB,UAAIE,OAAO,CAACF,IAAD,CAAP,KAAkBG,SAAtB,EAAiC;AAC/BD,QAAAA,OAAO,CAACF,IAAD,CAAP,GAAgB,CAAhB;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACF,IAAD,CAAP,IAAiB,CAAjB;AACD;AACF;AATyB;AAAA;AAAA;AAAA;AAAA;;AAU1B,SAAOE,OAAP;AACD;;AAEDE,OAAO,CAACC,GAAR,CAAYd,YAAY,CAAC,QAAD,EAAW,QAAX,CAAxB,GAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA","file":"1.5.ff261ad6.js","sourceRoot":"..","sourcesContent":["function findAnnagram(str1, str2) {\n  const charOccr1 = findOccurance(str1);\n  const charOccr2 = findOccurance(str2);\n\n  if (Object.keys(charOccr2).length !== Object.keys(charOccr1).length) {\n    return false;\n  }\n\n  for (let char in charOccr1) {\n    if (charOccr1[char] !== charOccr2[char]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction findOccurance(str) {\n  let tempObj = {};\n\n  for (let char of str) {\n    if (tempObj[char] === undefined) {\n      tempObj[char] = 1;\n    } else {\n      tempObj[char] += 1;\n    }\n  }\n  return tempObj;\n}\n\nconsole.log(findAnnagram('helloe', 'eollhe'));\n\n//\n\n// const str = 'Hello A Htere ';\n// let newObj = {};\n\n// for (let ele of str) {\n//   if (newObj[ele] !== undefined) {\n//     newObj[ele]++;\n//   } else {\n//     newObj[ele] = 1;\n//   }\n// }\n\n// console.log(newObj);\n\n// function findAnnagram(str1, str2) {\n//   let splStr = str1.split('');\n//   let splStr2 = str2.split('');\n\n//   splStr.sort();\n//   splStr2.sort();\n//   if (splStr2.join('') === splStr.join()) {\n//     return true;\n//   } else {\n//     return false;\n//   }\n// }\n\n// let numArr = [1, 3, 4, 5, 2];\n\n// function chunckArr(numArr, chunkSize) {\n//   let startSize = 0;\n//   let finalChunk = [];\n//   while (startSize < numArr.length) {\n//     let newChunk = [];\n//     newChunk = numArr.slice(startSize, chunkSize);\n//     numArr.splice(startSize, chunkSize);\n//     finalChunk = [...finalChunk, newChunk];\n//   }\n\n//   console.log(finalChunk);\n// }\n\n// chunckArr(numArr, 2);\n\n// finalChunk.push(numArr.slice(startSize, startSize + chunkSize));\n//startSize += chunkSize;\n"]}