{"version":3,"sources":["IC Practice/Publicis Sapient/index.js"],"names":["countUniqueValues","arr","obj","uniqueArr","forEach","ele","undefined","key","push","length","result","findMaxMin","max","min","j","console","log","patternMatch","longStr","shortStr","count","i","binarySearch","searchValue","start","end","mid","Math","floor","uniqueStr","str","position","char","currentString","uniqueString","charAt","indexOf","substr","reverseStr","revs","reverSimple","split","reverse","join","revesNumber","num","temp","findMaxChar","toLowerCase","maxChar","maxCount","testSetTimeout","setTimeout","testSetTimeoutFun","curr","a","b","c","d","arrCurr","valueCurry","global","outer","abc","inner","kbc","facto","checkPrime","isPrime","number","fizzBuzz","Array","from","value","index","map","findMissingNum","sum","newTotal","val","checkAnanGram","str1","str2","obj1","checkFreq","obj2","Object","keys","fiboSeries","fibArray"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEAF,EAAAA,GAAG,CAACG,OAAJ,CAAY,UAACC,GAAD,EAAS;AACnB,QAAIH,GAAG,CAACG,GAAD,CAAH,KAAaC,SAAjB,EAA4B;AAC1BJ,MAAAA,GAAG,CAACG,GAAD,CAAH,GAAW,CAAX;AACD,KAFD,MAEO;AACLH,MAAAA,GAAG,CAACG,GAAD,CAAH,IAAY,CAAZ;AACD;AACF,GAND;;AAQA,OAAKE,GAAL,IAAYL,GAAZ,EAAiB;AACf,QAAIA,GAAG,CAACK,GAAD,CAAH,KAAa,CAAjB,EAAoB;AAClBJ,MAAAA,SAAS,CAACK,IAAV,CAAeD,GAAf;AACD;AACF;;AAED,SAAOJ,SAAS,CAACM,MAAjB;AACD;;AAED,IAAIC,MAAM,GAAGV,iBAAiB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAD,CAA9B,EACA;;AAEA;AACA;AACA;;AAEA,SAASW,UAAT,CAAoBV,GAApB,EAAyB;AACvB,MAAIW,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,MAAIZ,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAhB,EAAqB;AACnBW,IAAAA,GAAG,GAAGX,GAAG,CAAC,CAAD,CAAT;AACAY,IAAAA,GAAG,GAAGZ,GAAG,CAAC,CAAD,CAAT;AACD;;AAED,OAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIb,GAAG,CAACQ,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;AACpC,QAAIb,GAAG,CAACa,CAAD,CAAH,GAASF,GAAb,EAAkB;AAChBA,MAAAA,GAAG,GAAGX,GAAG,CAACa,CAAD,CAAT;AACD;;AAED,QAAIb,GAAG,CAACa,CAAD,CAAH,GAASD,GAAb,EAAkB;AAChBA,MAAAA,GAAG,GAAGZ,GAAG,CAACa,CAAD,CAAT;AACD;AACF;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,GAAtB,EAA2B,QAA3B,EAAqCD,GAArC;AACD;;AAEDD,UAAU,CAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,CAAC,EAAjB,EAAqB,GAArB,EAA0B,EAA1B,CAAD,CAAV;AAEA;AACA;AACA;;AAEA,SAASM,YAAT,CAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AACvC,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACT,MAA5B,EAAoCY,CAAC,EAArC,EAAyC;AACvC,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,QAAQ,CAACV,MAA7B,EAAqCK,CAAC,EAAtC,EAA0C;AACxC,UAAIK,QAAQ,CAACL,CAAD,CAAR,KAAgBI,OAAO,CAACG,CAAC,GAAGP,CAAL,CAA3B,EAAoC;AAClC;AACD;;AAED,UAAIA,CAAC,KAAKK,QAAQ,CAACV,MAAnB,EAA2B;AACzBW,QAAAA,KAAK;AACN;AACF;AACF;;AAED,SAAOA,KAAP;AACD;;AAEDL,OAAO,CAACC,GAAR,CAAYC,YAAY,CAAC,mCAAD,EAAsC,OAAtC,CAAxB;AAEA;AACA;AACA;;AAEA,SAASK,YAAT,CAAsBrB,GAAtB,EAA2BsB,WAA3B,EAAwC;AACtC,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGxB,GAAG,CAACQ,MAAJ,GAAa,CAAvB;AACA,MAAIiB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAV;;AAEA,SAAOxB,GAAG,CAACyB,GAAD,CAAH,KAAaH,WAAb,IAA4BC,KAAK,IAAIC,GAA5C,EAAiD;AAC/C,QAAIF,WAAW,GAAGtB,GAAG,CAACyB,GAAD,CAArB,EAA4B;AAC1BD,MAAAA,GAAG,GAAGC,GAAG,GAAG,CAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,KAAK,GAAGE,GAAG,GAAG,CAAd;AACD;;AACDA,IAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAN;AACD;;AACD,MAAIxB,GAAG,CAACyB,GAAD,CAAH,KAAaH,WAAjB,EAA8B;AAC5B,WAAOG,GAAP;AACD;;AACD,SAAO,CAAC,CAAR;AACD;;AAEDX,OAAO,CAACC,GAAR,CAAYM,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAD,EAA2B,CAA3B,CAAxB;AAEA;AACA;AACA;;AAEA,SAASO,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,GAAG,CAACrB,MAAxB,EAAgCY,CAAC,EAAjC,EAAqC;AACnCW,IAAAA,IAAI,GAAGF,GAAG,CAACK,MAAJ,CAAWd,CAAX,CAAP;AACAU,IAAAA,QAAQ,GAAGE,aAAa,CAACG,OAAd,CAAsBJ,IAAtB,CAAX;;AAEA,QAAID,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBG,MAAAA,YAAY,GAAGD,aAAf;AACAA,MAAAA,aAAa,GAAGA,aAAa,CAACI,MAAd,CAAqBN,QAAQ,GAAG,CAAhC,CAAhB;AACD;;AACDE,IAAAA,aAAa,IAAID,IAAjB;AACD;;AAED,MAAI,CAACE,YAAY,CAACzB,MAAlB,EAA0B;AACxByB,IAAAA,YAAY,GAAGD,aAAf;AACD,GAnBqB,CAqBtB;;AACD,EAED;;AAEA;AACA;AACA;;;AAEA,SAASK,UAAT,CAAoBR,GAApB,EAAyB;AACvB,MAAIS,IAAI,GAAG,EAAX;;AADuB,6CAEVT,GAFU;AAAA;;AAAA;AAEvB,wDAAkB;AAAbE,MAAAA,IAAa;AAChBO,MAAAA,IAAI,GAAGP,IAAI,GAAGO,IAAd;AACD,KAJsB,CAKvB;;AALuB;AAAA;AAAA;AAAA;AAAA;AAMxB,EAED;;;AAEA,SAASC,WAAT,CAAqBV,GAArB,EAA0B;AACxB,SAAOA,GAAG,CAACW,KAAJ,CAAU,EAAV,EAAcC,OAAd,GAAwBC,IAAxB,CAA6B,EAA7B,CAAP;AACD,EAED;;AAEA;AACA;AACA;;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,MAAInC,MAAM,GAAG,CAAb;AACA,MAAIoC,IAAI,GAAG,CAAX;;AAEA,SAAOD,GAAG,KAAK,CAAf,EAAkB;AAChBC,IAAAA,IAAI,GAAGD,GAAG,GAAG,EAAb;AACAnC,IAAAA,MAAM,GAAGA,MAAM,GAAG,EAAT,GAAcoC,IAAvB;AACAD,IAAAA,GAAG,GAAGlB,IAAI,CAACC,KAAL,CAAWiB,GAAG,GAAG,EAAjB,CAAN;AACD,GARuB,CAUxB;;AACD,EAED;;AAEA;AACA;AACA;;;AAEA,SAASE,WAAT,CAAqBjB,GAArB,EAA0B;AACxBA,EAAAA,GAAG,GAAGA,GAAG,CAACkB,WAAJ,EAAN;AACA,MAAI9C,GAAG,GAAG,EAAV;AACA,MAAI+C,OAAO,GAAG,EAAd;AACA,MAAIC,QAAQ,GAAG,CAAf;;AAJwB,8CAMXpB,GANW;AAAA;;AAAA;AAMxB,2DAAkB;AAAbE,MAAAA,IAAa;;AAChB,UAAI9B,GAAG,CAAC8B,IAAD,CAAH,KAAc1B,SAAlB,EAA6B;AAC3BJ,QAAAA,GAAG,CAAC8B,IAAD,CAAH,GAAY,CAAZ;AACD,OAFD,MAEO;AACL9B,QAAAA,GAAG,CAAC8B,IAAD,CAAH,IAAa,CAAb;AACD;AACF;AAZuB;AAAA;AAAA;AAAA;AAAA;;AAcxB,OAAKA,IAAL,IAAa9B,GAAb,EAAkB;AAChB,QAAIA,GAAG,CAAC8B,IAAD,CAAH,GAAYkB,QAAhB,EAA0B;AACxBA,MAAAA,QAAQ,GAAGhD,GAAG,CAAC8B,IAAD,CAAd;AACAiB,MAAAA,OAAO,GAAGjB,IAAV;AACD;AACF;;AAEDjB,EAAAA,OAAO,CAACC,GAAR,CAAYkC,QAAZ,EAAsBD,OAAtB;AACD,EAED;;AAEA;AACA;AACA;AACA;;;AAEA,SAASE,cAAT,CAAwBN,GAAxB,EAA6B;AAAA,6BAClBxB,CADkB;AAEzB+B,IAAAA,UAAU,CAAC,YAAM;AACfrC,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACD,KAFS,EAEPA,CAAC,GAAG,IAFG,CAAV;AAFyB;;AAC3B,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIwB,GAArB,EAA0BxB,CAAC,EAA3B,EAA+B;AAAA,UAAtBA,CAAsB;AAI9B;AACF,EAED;;;AAEA,SAASgC,iBAAT,CAA2BR,GAA3B,EAAgC;AAC9B,OAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIwB,GAArB,EAA0BxB,CAAC,EAA3B,EAA+B;AAC7B,KAAC,UAAUA,CAAV,EAAa;AACZ+B,MAAAA,UAAU,CAAC,YAAM;AACfrC,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACD,OAFS,EAEPA,CAAC,GAAG,IAFG,CAAV;AAGD,KAJD,EAIGA,CAJH;AAKD;AACF,EAED;;AAEA;AACA;AACA;;;AAEA,SAASiC,IAAT,CAAcC,CAAd,EAAiB;AACf,SAAO,UAAUC,CAAV,EAAa;AAClB,WAAO,UAAUC,CAAV,EAAa;AAClB,aAAO,UAAUC,CAAV,EAAa;AAClB,eAAOH,CAAC,GAAGC,CAAJ,GAAQC,CAAR,GAAYC,CAAnB;AACD,OAFD;AAGD,KAJD;AAKD,GAND;AAOD,EAED;AAEA;;;AAEA,SAASC,OAAT,CAAiBJ,CAAjB,EAAoB;AAClB,SAAO,UAACC,CAAD;AAAA,WAAO,UAACC,CAAD;AAAA,aAAO,UAACC,CAAD,EAAO;AAC1B,eAAOH,CAAC,GAAGC,CAAJ,GAAQC,CAAR,GAAYC,CAAnB;AACD,OAFa;AAAA,KAAP;AAAA,GAAP;AAGD;;AAED,IAAIE,UAAU,GAAGD,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAjB,EAEA;AAEA;;AAEA,IAAIE,MAAM,GAAG,EAAb;;AACA,SAASC,KAAT,GAAiB;AACf,MAAIC,GAAG,GAAG,IAAV;;AACA,WAASC,KAAT,GAAiB;AACf,QAAIC,GAAG,GAAG,IAAV;AACAlD,IAAAA,OAAO,CAACC,GAAR,CAAY+C,GAAZ,EAAiBE,GAAjB,EAAsBJ,MAAtB;AACD;;AACDG,EAAAA,KAAK;AACN,EAED;AAEA;;;AAEA,SAASE,KAAT,CAAerB,GAAf,EAAoB;AAClB,MAAIA,GAAG,KAAK,CAAZ,EAAe;AACb,WAAO,CAAP;AACD;;AAED,SAAOA,GAAG,GAAGqB,KAAK,CAACrB,GAAG,GAAG,CAAP,CAAlB;AACD,EAED;;;AAEA,SAASsB,UAAT,CAAoBtB,GAApB,EAAyB;AACvB,MAAIuB,OAAO,GAAG,IAAd;;AAEA,MAAIvB,GAAG,KAAK,CAAZ,EAAe;AACb,WAAO,IAAP;AACD;;AAED,OAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,GAApB,EAAyBxB,CAAC,EAA1B,EAA8B;AAC5B,QAAIwB,GAAG,GAAGxB,CAAN,KAAY,CAAhB,EAAmB;AACjB+C,MAAAA,OAAO,GAAG,KAAV;AACA;AACD;AACF;;AAEDrD,EAAAA,OAAO,CAACC,GAAR,CAAYoD,OAAZ;AACD,EAED;AACA;AACA;AACA;AAEA;;;AAEA,IAAIC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,EAAxB,EAA4B,IAA5B,CAAb,EAEA;AACA;AAEA;;AAEA,SAASC,QAAT,GAAoB;AAClBC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,EAAV,CAAX,EAA0B,UAACE,KAAD,EAAQC,KAAR,EAAkB;AAC1CA,IAAAA,KAAK;;AACL,QAAIA,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,GAAG,CAAR,KAAc,CAArC,EAAwC;AACtC,UAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB,OAAO,MAAP;AACrB,UAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB,OAAO,MAAP;AACrB,aAAO,UAAP;AACD;;AACD,WAAOA,KAAP;AACD,GARD,EAQGC,GARH,CAQO,UAACF,KAAD;AAAA,WAAW1D,OAAO,CAACC,GAAR,CAAYyD,KAAZ,CAAX;AAAA,GARP;AASD,EAED;AAEA;;;AAEA,SAASG,cAAT,CAAwB3E,GAAxB,EAA6B;AAC3B,MAAI4E,GAAG,GAAG,CAAV;AACA,MAAIC,QAAQ,GAAGnD,IAAI,CAACC,KAAL,CAAY,CAAC3B,GAAG,CAACQ,MAAJ,GAAa,CAAd,KAAoBR,GAAG,CAACQ,MAAJ,GAAa,CAAjC,CAAD,GAAwC,CAAnD,CAAf;;AAF2B,8CAGfR,GAHe;AAAA;;AAAA;AAG3B,2DAAiB;AAAZ8E,MAAAA,GAAY;AACfF,MAAAA,GAAG,IAAIE,GAAP;AACD;AAL0B;AAAA;AAAA;AAAA;AAAA;;AAM3B,SAAOD,QAAQ,GAAGD,GAAlB;AACD;;AAED,IAAIJ,KAAK,GAAGG,cAAc,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAA1B;AAEA7D,OAAO,CAACC,GAAR,CAAYyD,KAAZ,GAEA;;AAEA,SAASO,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACjC,MAAIC,IAAI,GAAGC,SAAS,CAACH,IAAD,CAApB;AACA,MAAII,IAAI,GAAGD,SAAS,CAACF,IAAD,CAApB;;AAEA,MAAII,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkB1E,MAAlB,KAA6B6E,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB5E,MAAnD,EAA2D;AACzD,WAAO,KAAP;AACD;;AAED,OAAKF,GAAL,IAAY4E,IAAZ,EAAkB;AAChB,QAAIA,IAAI,CAAC5E,GAAD,CAAJ,KAAc8E,IAAI,CAAC9E,GAAD,CAAtB,EAA6B;AAC3B,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;AACF;;AAED,SAAS6E,SAAT,CAAmBtD,GAAnB,EAAwB;AACtB,MAAI5B,GAAG,GAAG,EAAV;;AADsB,8CAGL4B,GAHK;AAAA;;AAAA;AAGtB,2DAAsB;AAAA,UAAbE,KAAa;;AACpB,UAAI9B,GAAG,CAAC8B,KAAD,CAAH,KAAc1B,SAAlB,EAA6B;AAC3BJ,QAAAA,GAAG,CAAC8B,KAAD,CAAH,GAAY,CAAZ;AACD,OAFD,MAEO;AACL9B,QAAAA,GAAG,CAAC8B,KAAD,CAAH,IAAa,CAAb;AACD;AACF;AATqB;AAAA;AAAA;AAAA;AAAA;;AAWtB,SAAO9B,GAAP;AACD;;AAEDa,OAAO,CAACC,GAAR,CAAYgE,aAAa,CAAC,OAAD,EAAU,QAAV,CAAzB,GAEA;;AAEA,SAASQ,UAAT,CAAoB3C,GAApB,EAAyB;AACvB,MAAM4C,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;;AAEA,OAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIwB,GAArB,EAA0BxB,CAAC,EAA3B,EAA+B;AAC7BoE,IAAAA,QAAQ,CAACjF,IAAT,CAAciF,QAAQ,CAACpE,CAAC,GAAG,CAAL,CAAR,GAAkBoE,QAAQ,CAACpE,CAAC,GAAG,CAAL,CAAxC;AACD;;AAED,SAAOoE,QAAQ,CAACA,QAAQ,CAAChF,MAAT,GAAkB,CAAnB,CAAf;AACD;;AAEDM,OAAO,CAACC,GAAR,CAAYwE,UAAU,CAAC,CAAD,CAAtB","file":"Publicis Sapient.a2ba88a8.js","sourceRoot":"..","sourcesContent":["/**\n *   Count Unique Value In Array\n */\n\nfunction countUniqueValues(arr) {\n  let obj = {};\n  let uniqueArr = [];\n\n  arr.forEach((ele) => {\n    if (obj[ele] === undefined) {\n      obj[ele] = 1;\n    } else {\n      obj[ele] += 1;\n    }\n  });\n\n  for (key in obj) {\n    if (obj[key] === 1) {\n      uniqueArr.push(key);\n    }\n  }\n\n  return uniqueArr.length;\n}\n\nlet result = countUniqueValues([1, 3, 4, 5, 2, 3, 2, 55, 33, 55, 35]);\n// console.log(result);\n\n/**\n *   Find max and min number into arry\n */\n\nfunction findMaxMin(arr) {\n  let max = 0;\n  let min = 0;\n\n  if (arr[0] > arr[1]) {\n    max = arr[1];\n    min = arr[0];\n  }\n\n  for (let j = 2; j <= arr.length; j++) {\n    if (arr[j] > max) {\n      max = arr[j];\n    }\n\n    if (arr[j] < min) {\n      min = arr[j];\n    }\n  }\n\n  console.log('min = ', min, 'max = ', max);\n}\n\nfindMaxMin([200, 191, 112, -11, 330, 60]);\n\n/**\n *  count pattern matching in longer string\n */\n\nfunction patternMatch(longStr, shortStr) {\n  let count = 0;\n\n  for (let i = 0; i < longStr.length; i++) {\n    for (let j = 0; j < shortStr.length; j++) {\n      if (shortStr[j] !== longStr[i + j]) {\n        break;\n      }\n\n      if (j === shortStr.length) {\n        count++;\n      }\n    }\n  }\n\n  return count;\n}\n\nconsole.log(patternMatch('bunny is going college with bunny', 'bunny'));\n\n/**\n *  binary search\n */\n\nfunction binarySearch(arr, searchValue) {\n  let start = 0;\n  let end = arr.length - 1;\n  let mid = Math.floor((start + end) / 2);\n\n  while (arr[mid] !== searchValue && start <= end) {\n    if (searchValue < arr[mid]) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n    mid = Math.floor((start + end) / 2);\n  }\n  if (arr[mid] === searchValue) {\n    return mid;\n  }\n  return -1;\n}\n\nconsole.log(binarySearch([1, 3, 4, 5, 23, 25, 42], 5));\n\n/**\n * Longest sequence of unique character\n */\n\nfunction uniqueStr(str) {\n  let position = 0;\n  let char = '';\n  let currentString = '';\n  let uniqueString = '';\n\n  for (let i = 0; i < str.length; i++) {\n    char = str.charAt(i);\n    position = currentString.indexOf(char);\n\n    if (position !== -1) {\n      uniqueString = currentString;\n      currentString = currentString.substr(position + 1);\n    }\n    currentString += char;\n  }\n\n  if (!uniqueString.length) {\n    uniqueString = currentString;\n  }\n\n  // console.log(uniqueString);\n}\n\n// uniqueStr('hello there');\n\n/**\n *  Reverse String\n */\n\nfunction reverseStr(str) {\n  let revs = '';\n  for (char of str) {\n    revs = char + revs;\n  }\n  // console.log(revs);\n}\n\n// reverseStr('hello');\n\nfunction reverSimple(str) {\n  return str.split('').reverse().join('');\n}\n\n// console.log(reverSimple('bunny'));\n\n/**\n *  Reverse Number\n */\n\nfunction revesNumber(num) {\n  let result = 0;\n  let temp = 0;\n\n  while (num !== 0) {\n    temp = num % 10;\n    result = result * 10 + temp;\n    num = Math.floor(num / 10);\n  }\n\n  // console.log(result);\n}\n\n// revesNumber(4563);\n\n/**\n *  Max character in string\n */\n\nfunction findMaxChar(str) {\n  str = str.toLowerCase();\n  let obj = {};\n  let maxChar = '';\n  let maxCount = 0;\n\n  for (char of str) {\n    if (obj[char] === undefined) {\n      obj[char] = 1;\n    } else {\n      obj[char] += 1;\n    }\n  }\n\n  for (char in obj) {\n    if (obj[char] > maxCount) {\n      maxCount = obj[char];\n      maxChar = char;\n    }\n  }\n\n  console.log(maxCount, maxChar);\n}\n\n// findMaxChar('Uncommited Msg');\n\n/**\n *  Set Timout\n *\n */\n\nfunction testSetTimeout(num) {\n  for (let i = 1; i <= num; i++) {\n    setTimeout(() => {\n      console.log(i);\n    }, i * 1000);\n  }\n}\n\n//testSetTimeout(10);\n\nfunction testSetTimeoutFun(num) {\n  for (var i = 1; i <= num; i++) {\n    (function (i) {\n      setTimeout(() => {\n        console.log(i);\n      }, i * 1000);\n    })(i);\n  }\n}\n\n// testSetTimeoutFun(10);\n\n/**\n * Curring\n */\n\nfunction curr(a) {\n  return function (b) {\n    return function (c) {\n      return function (d) {\n        return a * b * c * d;\n      };\n    };\n  };\n}\n\n// let valueCurry = curr(2)(4)(5)(4);\n\n// console.log(valueCurry);\n\nfunction arrCurr(a) {\n  return (b) => (c) => (d) => {\n    return a * b * c * d;\n  };\n}\n\nlet valueCurry = arrCurr(2)(8)(2)(4);\n\n// console.log(valueCurry);\n\n//clourse\n\nlet global = 55;\nfunction outer() {\n  let abc = '34';\n  function inner() {\n    let kbc = '44';\n    console.log(abc, kbc, global);\n  }\n  inner();\n}\n\n// outer();\n\n// factorial\n\nfunction facto(num) {\n  if (num === 1) {\n    return 1;\n  }\n\n  return num * facto(num - 1);\n}\n\n// console.log(facto(6));\n\nfunction checkPrime(num) {\n  let isPrime = true;\n\n  if (num === 1) {\n    return null;\n  }\n\n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n      isPrime = false;\n      break;\n    }\n  }\n\n  console.log(isPrime);\n}\n\n// checkPrime(3);\n// checkPrime(30);\n// checkPrime(17);\n// checkPrime(35);\n\n// sort arry\n\nlet number = [2, 4, 6, 7, 3, 1, 100, 34, 4343];\n\n// console.log(number.sort((a, b) => a - b));\n// console.log(number.sort((a, b) => b - a));\n\n// fiz buzz\n\nfunction fizzBuzz() {\n  Array.from(new Array(45), (value, index) => {\n    index++;\n    if (index % 5 === 0 || index % 3 === 0) {\n      if (index % 5 !== 0) return 'Fizz';\n      if (index % 3 !== 0) return 'Buzz';\n      return 'FizzBuzz';\n    }\n    return index;\n  }).map((value) => console.log(value));\n}\n\n// fizzBuzz();\n\n// missing number in array\n\nfunction findMissingNum(arr) {\n  let sum = 0;\n  let newTotal = Math.floor(((arr.length + 1) * (arr.length + 2)) / 2);\n  for (val of arr) {\n    sum += val;\n  }\n  return newTotal - sum;\n}\n\nlet value = findMissingNum([1, 2, 4, 6, 3, 7, 8]);\n\nconsole.log(value);\n\n// anagram find\n\nfunction checkAnanGram(str1, str2) {\n  let obj1 = checkFreq(str1);\n  let obj2 = checkFreq(str2);\n\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n\n  for (key in obj1) {\n    if (obj1[key] !== obj2[key]) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nfunction checkFreq(str) {\n  let obj = {};\n\n  for (let char of str) {\n    if (obj[char] === undefined) {\n      obj[char] = 1;\n    } else {\n      obj[char] += 1;\n    }\n  }\n\n  return obj;\n}\n\nconsole.log(checkAnanGram('level', 'levell'));\n\n// fibo series\n\nfunction fiboSeries(num) {\n  const fibArray = [0, 1];\n\n  for (let i = 2; i <= num; i++) {\n    fibArray.push(fibArray[i - 2] + fibArray[i - 1]);\n  }\n\n  return fibArray[fibArray.length - 1];\n}\n\nconsole.log(fiboSeries(8));\n"]}