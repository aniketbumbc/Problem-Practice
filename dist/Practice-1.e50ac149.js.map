{"version":3,"sources":["IC Practice/JP Practice/Practice-1.js"],"names":["reversString","str","revers","char","revNumber","number","result","digit","checkPalindrome","toLowerCase","revs","findVowel","vowels","count","includes","findMaxChar","charObj","maxCount","maxChar","undefined","findAnagram","str1","str2","objStr1","countFreq","objStr2","Object","keys","length","objChar","isPrime","num","i","fiboSeries","n1","n2","nextTerm","fizzBuzz","console","log","facto"],"mappings":"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","file":"Practice-1.e50ac149.js","sourceRoot":"..","sourcesContent":["/**\n *  Reverse String\n */\n\nfunction reversString(str) {\n  let revers = '';\n  for (let char of str) {\n    revers = char + revers;\n  }\n  return revers;\n  //  return str.split('').reverse().join();\n}\n\n// console.log(reversString('Aniket'));\n\n/**\n * Reverse Number\n */\n\nfunction revNumber(number) {\n  let result = 0;\n  let digit = 0;\n  while (number) {\n    digit = number % 10;\n    result = result * 10 + digit;\n    number = (number / 10) | 0;\n  }\n  return result;\n}\n// console.log(revNumber(1234));\n\n/**\n *  Palindrome\n */\n\nfunction checkPalindrome(str) {\n  str = str.toLowerCase();\n  let revs = '';\n  for (let char of str) {\n    revs = char + revs;\n  }\n\n  if (revs === str) {\n    return true;\n  }\n\n  return false;\n}\n\n// console.log(checkPalindrome('Kayak'));\n\n/**\n *  Find Vowels in string\n */\n\nfunction findVowel(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let count = 0;\n\n  for (let char of str) {\n    if (vowels.includes(char)) {\n      count++;\n    }\n  }\n\n  return count;\n}\n// console.log(findVowel('configured'));\n\n/**\n *  Find Max charater in string\n */\n\nfunction findMaxChar(str) {\n  let charObj = {};\n  let maxCount = 0;\n  let maxChar = '';\n  for (let char of str) {\n    if (charObj[char] === undefined) {\n      charObj[char] = 1;\n    } else {\n      charObj[char] += 1;\n    }\n  }\n\n  for (let char in charObj) {\n    if (charObj[char] > maxCount) {\n      maxCount = charObj[char];\n      maxChar = char;\n    }\n    return [maxCount, maxChar];\n  }\n}\n\n// console.log(findMaxChar('ccccbbaa'));\n\n/**\n *  Anangram find anangram in two words\n */\n\nfunction findAnagram(str1, str2) {\n  let objStr1 = countFreq(str1);\n  let objStr2 = countFreq(str2);\n\n  if (Object.keys(objStr1).length !== Object.keys(objStr2).length) {\n    return false;\n  }\n\n  for (let char in objStr1) {\n    if (objStr1[char] !== objStr2[char]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction countFreq(str) {\n  let objChar = {};\n\n  for (let char of str) {\n    if (objChar[char] === undefined) {\n      objChar[char] = 1;\n    } else {\n      objChar[char] += 1;\n    }\n  }\n  return objChar;\n}\n\n// console.log(findAnagram('elbow', 'below'));\n\n/**\n *  Prime Number\n */\n\nfunction isPrime(num) {\n  let isPrime = true;\n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n      isPrime = false;\n      break;\n    }\n  }\n\n  return isPrime;\n}\n\n// console.log(isPrime(7));\n\n/**\n * Fibo series\n */\n\nfunction fiboSeries(num) {\n  let n1 = 0;\n  let n2 = 1;\n  let nextTerm = 0;\n\n  for (let i = 0; i <= num; i++) {\n    nextTerm = n1 + n2;\n    n1 = n2;\n    n2 = nextTerm;\n  }\n  return nextTerm;\n}\n\n// console.log(fiboSeries(3));\n\n/**\n * Fizz Buzz\n *\n */\n\nfunction fizzBuzz(num) {\n  for (let i = 1; i <= num; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n      console.log('FizzzBuzz');\n    } else if (i % 5 === 0) {\n      console.log('Buzzzz');\n    } else if (i % 3 === 0) {\n      console.log('Fizzzz');\n    } else {\n      console.log(i);\n    }\n  }\n}\n\n// console.log(fizzBuzz(30));\n\n/**\n * Factorial\n */\n\nfunction facto(num) {\n  if (num === 1) {\n    return 1;\n  }\n  return num * facto(num - 1);\n}\n\nconsole.log(facto(5));\n"]}