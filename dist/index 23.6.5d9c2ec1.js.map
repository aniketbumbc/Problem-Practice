{"version":3,"sources":["Others/DS/Practice Pattern/index 23.6.js"],"names":["checkFreq","arr1","arr2","length","i","squre","index","indexOf","splice","isCheckFrequency","obj1","obj2","value","undefined","checkMinMax","arr","arrLength","min","max","console","log"],"mappings":"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","file":"index 23.6.5d9c2ec1.js","sourceRoot":"..","sourcesContent":["/** Check Frequency Same of array squre */\n\nfunction checkFreq(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    let squre = arr1[i] * arr1[i];\n    let index = arr2.indexOf(squre);\n\n    if (index === -1) {\n      return false;\n    }\n\n    arr2.splice(index, 1);\n  }\n\n  return true;\n}\n\n// New Technique\n\nfunction isCheckFrequency(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  let obj1 = {};\n  let obj2 = {};\n\n  for (let value of arr1) {\n    if (obj1[value] === undefined) {\n      obj1[value] = 1;\n    } else {\n      obj1[value] += 1;\n    }\n  }\n\n  for (let value of arr2) {\n    if (obj2[value] === undefined) {\n      obj2[value] = 1;\n    } else {\n      obj2[value] += 1;\n    }\n  }\n\n  for (let value in obj1) {\n    if (!(value ** 2 in obj2)) {\n      return false;\n    }\n\n    let squre = value * value;\n    if (obj2[squre] !== obj1[value]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n//console.log(isCheckFrequency([1, 3, 4, 3], [16, 9, 1, 9]));\n\n/**\n *  Find Maximum and Minimum number into array\n */\n\nfunction checkMinMax(arr) {\n  let arrLength = arr.length;\n  let min = 0;\n  let max = 0;\n\n  if (arrLength < 0) {\n    return null;\n  }\n\n  if (arrLength === 1) {\n    min = arr[0];\n    max = arr[0];\n  }\n\n  if (arr[0] > arr[1]) {\n    max = arr[1];\n    min = arr[0];\n  }\n\n  for (let i = 2; i < arrLength; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n    }\n\n    if (arr[i] < min) {\n      min = arr[i];\n    }\n  }\n\n  console.log('min = ', min, 'max = ', max);\n}\n\ncheckMinMax([200, 191, 112, -11, 330, 60]);\n"]}