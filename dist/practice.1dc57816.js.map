{"version":3,"sources":["IC Practice/practice.js"],"names":["chunckArry","array","size","startSize","finalChunk","length","push","slice","console","log","findUniqueValue","arr","uniqueCount","i","j"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,SAAOD,SAAS,GAAGF,KAAK,CAACI,MAAzB,EAAiC;AAC/BD,IAAAA,UAAU,CAACE,IAAX,CAAgBL,KAAK,CAACM,KAAN,CAAYJ,SAAZ,EAAuBA,SAAS,GAAGD,IAAnC,CAAhB;AACAC,IAAAA,SAAS,IAAID,IAAb;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,SAAOA,UAAP;AACD,EAED;;;AAEA,SAASM,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,CAACN,MAAzB,EAAiCQ,CAAC,EAAlC,EAAsC;AACpC,SAAK,IAAIC,CAAC,GAAGD,CAAC,GAAG,CAAjB,EAAoBC,CAAC,IAAIH,GAAG,CAACN,MAA7B,EAAqCS,CAAC,EAAtC,EAA0C;AACxC,UAAIH,GAAG,CAACE,CAAD,CAAH,KAAWF,GAAG,CAACG,CAAD,CAAlB,EAAuB;AACrBF,QAAAA,WAAW;AACXC,QAAAA,CAAC;AACF,OAHD,MAGO;AACL;AACD;AACF;AACF;;AACDL,EAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACD;;AAEDF,eAAe,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAf","file":"practice.1dc57816.js","sourceRoot":"..","sourcesContent":["function chunckArry(array, size) {\n  let startSize = 0;\n  let finalChunk = [];\n  while (startSize < array.length) {\n    finalChunk.push(array.slice(startSize, startSize + size));\n    startSize += size;\n  }\n  console.log(finalChunk);\n  return finalChunk;\n}\n\n//chunckArry([1, 2, 3, 4, 5], 2);\n\nfunction findUniqueValue(arr) {\n  let uniqueCount = 0;\n  for (let i = 0; i <= arr.length; i++) {\n    for (let j = i + 1; j <= arr.length; j++) {\n      if (arr[i] !== arr[j]) {\n        uniqueCount++;\n        i++;\n      } else {\n        break;\n      }\n    }\n  }\n  console.log(uniqueCount);\n}\n\nfindUniqueValue([1, 1, 1, 1, 1, 1, 2]);\n"]}