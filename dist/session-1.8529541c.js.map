{"version":3,"sources":["IC Practice/Oviva/session-1.js"],"names":["isValid","str","obj","stack","char","match","replace","newStr","replaceAll","console","log","hasOwnProperty","push","removeChar","pop","length","isValidParenthesis","uniqueChar","tempObj","undefined","indexOf","numArr","secondLargeEle","maxElement","Math","max","filter","num","revStr","revString","reversNum","num2","reverNum","floor","countVowels","vowels","count","includes","curry","a","b","c","facto","printSecond","i","setTimeout","printSecondV","findMaxMin","arr","min","isAnangram","str1","str2","objStr1","countChar","objStr2","Object","keys","fiboSeries","num1","nextTerm","fizzBuzz","Array","from","value","index","map","findMissNumber","currentTotal","ele","newTotal","findStr","longStr","smlStr","split","longSequ","position","currentString","uniqueString","charAt","substr","isPrime","prime","myMap","Map","set","values","key","get","has","size","entries"],"mappings":"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","file":"session-1.8529541c.js","sourceRoot":"..","sourcesContent":["/**\n *  Valid parenthesis\n */\n\nconst isValid = (str) => {\n  const obj = {\n    '(': ')',\n    '{': '}',\n    '[': ']',\n  };\n\n  const stack = [];\n\n  for (let char of str) {\n    if (char.match(/^[0-9a-z]+$/)) {\n      str = str.replace(char, ' ');\n    }\n  }\n\n  const newStr = str.replaceAll(' ', '');\n\n  console.log(newStr);\n\n  for (const char of newStr) {\n    if (obj.hasOwnProperty(char)) {\n      stack.push(char);\n    } else {\n      const removeChar = stack.pop();\n      if (char !== obj[removeChar]) {\n        return false;\n      }\n    }\n  }\n\n  return stack.length === 0;\n};\n\nconst isValidParenthesis = (str) => {\n  const obj = {\n    '{': '}',\n    '(': ')',\n    '[': ']',\n  };\n\n  const stack = [];\n  for (char of str) {\n    if (char.match(/^[0-9a-z]+$/)) {\n      str = str.replace(char, ' ');\n    }\n  }\n  const newStr = str.replaceAll(' ', '');\n  for (const char of newStr) {\n    if (obj.hasOwnProperty(char)) {\n      stack.push(char);\n    } else {\n      const removeChar = stack.pop();\n      if (char !== obj[removeChar]) {\n        return false;\n      }\n    }\n  }\n  return stack.length === 0;\n};\n\n// console.log(isValidParenthesis('[()]{}{[()(fgfgfsdfg5454)]()fdfdfd}'));\n// console.log(isValidParenthesis('[5a(]'));\n\n//First unique charactor in the string\n\nfunction uniqueChar(str) {\n  let tempObj = {};\n\n  for (let char of str) {\n    if (tempObj[char] === undefined) {\n      tempObj[char] = 1;\n    } else {\n      tempObj[char] += 1;\n    }\n  }\n\n  for (let char of str) {\n    if (tempObj[char] === 1) {\n      return [char, str.indexOf(char)];\n    }\n  }\n\n  return -1;\n}\n\n//console.log(uniqueChar('aabb'));\n\n// find second largest element in array\n\nlet numArr = [12, 35, 1, 10, 34, 1];\n\nconst secondLargeEle = () => {\n  const maxElement = Math.max(...numArr);\n  numArr = numArr.filter((num) => num !== maxElement);\n  return Math.max(...numArr);\n};\n\n//console.log(secondLargeEle());\n\n// reverse string\n\nfunction revStr(str) {\n  let revString = '';\n  for (let char of str) {\n    revString = char + revString;\n  }\n  console.log(revString);\n}\n\nrevStr('aniket');\n\n// reverse number\n\nfunction reversNum(num) {\n  let num2 = 0;\n  let reverNum = 0;\n\n  while (num) {\n    num2 = num % 10;\n    reverNum = reverNum * 10 + num2;\n    num = Math.floor(num / 10);\n  }\n  console.log(reverNum);\n}\n\nreversNum(123456);\n\n//count number of vowels in string\n\nfunction countVowels(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let count = 0;\n  for (let char of str) {\n    if (vowels.includes(char)) {\n      count++;\n    }\n  }\n  console.log(count);\n}\n\n//countVowels('Pneumonoultramicroscopicsilicovolcanoconiosis');\n\n//curring\n\nfunction curry(a, b) {\n  if (b === undefined) {\n    return function (b) {\n      return function (c) {\n        return a + b + c;\n      };\n    };\n  } else {\n    return a + b;\n  }\n}\n\n// console.log(curry(2)(4)(3));\n\n// console.log(curry(10, 34));\n\n// // sort array\n\n// console.log(numArr.sort((a, b) => a - b));\n// console.log(numArr.sort((a, b) => b - a));\n\n//factorial number\n\nfunction facto(num) {\n  if (num === 1) {\n    return num;\n  }\n\n  return num * facto(num - 1);\n}\n\n//console.log(facto(5));\n\nfunction printSecond(num) {\n  for (let i = 1; i <= num; i++) {\n    setTimeout(() => {\n      // console.log(i);\n    }, 1000 * i);\n  }\n}\n\n//printSecond(10);\n\n// set Timeout using var\n\nfunction printSecondV(num) {\n  for (var i = 1; i <= num; i++) {\n    (function (i) {\n      setTimeout(() => {\n        //console.log(i);\n      }, 1000 * i);\n    })(i);\n  }\n}\n\n// printSecondV(10);\n\nfunction findMaxMin(arr) {\n  let max = 0;\n  let min = 0;\n\n  if (arr.length === 1) {\n    max = arr[0];\n    min = arr[0];\n  }\n\n  max = arr[1];\n  min = arr[0];\n\n  for (let i = 2; i < arr.length; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n    }\n\n    if (arr[i] < min) {\n      min = arr[i];\n    }\n  }\n\n  //  console.log('max:---', max, 'min:-----', min);\n}\n\n// findMaxMin([1, 2, 3, 4, 5, 6, 3, 6, -22, 120]);\n\n// Anagram string\n\nfunction isAnangram(str1, str2) {\n  let objStr1 = countChar(str1);\n  let objStr2 = countChar(str2);\n\n  if (Object.keys(objStr1).length !== Object.keys(objStr2).length) {\n    return false;\n  }\n\n  for (const char in objStr1) {\n    if (objStr1[char] !== objStr2[char]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction countChar(str) {\n  let tempObj = {};\n  for (const char of str) {\n    if (tempObj[char] !== undefined) {\n      tempObj[char] += 1;\n    } else {\n      tempObj[char] = 1;\n    }\n  }\n  return tempObj;\n}\n\nconsole.log(isAnangram('lvel', 'levlr'));\n\n// fibo series\n\nfunction fiboSeries(num) {\n  let num1 = 0;\n  let num2 = 1;\n  let nextTerm = 0;\n\n  for (let i = 1; i < num; i++) {\n    nextTerm = num1 + num2;\n    num1 = num2;\n    num2 = nextTerm;\n  }\n  console.log(nextTerm);\n}\n\n//fiboSeries(12);\n\n/**\n *  Fizz Buzz\n */\n\nfunction fizzBuzz(num) {\n  Array.from(new Array(num), (value, index) => {\n    index++;\n    if (index % 5 === 0 || index % 3 === 0) {\n      if (index % 5 !== 0) return 'Fizz';\n      if (index % 3 !== 0) return 'Buzz';\n      return 'Fizz Buzz';\n    }\n    return index;\n  }).map((value) => console.log(value));\n}\n\n//fizzBuzz(45);\n\n// find missing number\n\nfunction findMissNumber(arr) {\n  let currentTotal = 0;\n  for (let ele of arr) {\n    currentTotal += ele;\n  }\n  let newTotal = Math.floor(((arr.length + 1) * (arr.length + 2)) / 2);\n\n  return newTotal - currentTotal;\n}\n\n//console.log(findMissNumber([1, 2, 4, 6, 3, 7, 8]));\n\n/**\n *  Search smaller string in large string\n */\n\nfunction findStr(longStr, smlStr) {\n  let tempObj = {};\n\n  for (const char of longStr.split(' ')) {\n    if (tempObj[char] !== undefined) {\n      tempObj[char] += 1;\n    } else {\n      tempObj[char] = 1;\n    }\n  }\n\n  for (const char in tempObj) {\n    if (char === smlStr) {\n      return [char, tempObj[char]];\n    }\n  }\n}\n\nconsole.log(\n  findStr('bunny is going college with bunny college is college', 'is')\n);\n\n/**\n *  long sequence unique characters\n */\n\nfunction longSequ(str) {\n  let position = 0;\n  let char = '';\n  let currentString = '';\n  let uniqueString = '';\n\n  for (let i = 0; i < str.length; i++) {\n    char = str.charAt(i);\n    position = currentString.indexOf(char);\n    if (position !== -1) {\n      uniqueString = currentString;\n      currentString = currentString.substr(position + 1);\n    }\n    currentString += char;\n  }\n\n  if (!uniqueString.length) {\n    uniqueString = currentString;\n  }\n\n  console.log(uniqueString);\n}\n\n//longSequ('hello there');\n\n//Prime number\n\nfunction isPrime(num) {\n  let prime = true;\n\n  if (num < 2) {\n    return null;\n  }\n\n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n      prime = false;\n      return prime;\n    }\n  }\n\n  return prime;\n}\n\n// for (var i = 0; i < 100; i++) {\n//   if (isPrime(i)) console.log(i);\n// }\n\n// const isPromise = new Promise((resolve, reject) => {\n//   let temp = false;\n\n//   if (temp) {\n//     resolve('Yahooo');\n//   } else {\n//     reject('no Yahoo');\n//   }\n// });\n\n// isPromise\n//   .then((value) => console.log(value))\n//   .catch((err) => console.log('err', err));\n\n/**\n *  Map data types\n */\n\nconst myMap = new Map();\n\nmyMap.set(0, 'bunny');\nmyMap.set(1, 'Kapil');\n\nmyMap.set(2, 'Gaju');\n\nmyMap.set(3, 'Omi');\n\nconsole.log(myMap);\n\nfor (let value of myMap.values()) {\n  //console.log(value);\n}\n\nmyMap.set(10, 'set new bun');\n\nfor (let [key, value] of myMap) {\n  console.log(`${key} == ${value}`);\n}\n\nconsole.log(myMap.get(10));\nconsole.log('has', myMap.has(10));\nconsole.log(myMap.size);\n\nconst obj = {\n  '(': ')',\n  '{': '}',\n  '[': ']',\n};\n\nconsole.log(Object.entries(obj).length);\n"]}