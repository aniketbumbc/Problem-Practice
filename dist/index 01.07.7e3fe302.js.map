{"version":3,"sources":["Code/DS/Practice Pattern/index 01.07.js"],"names":["search","arr","searchValue","min","max","length","mid","Math","floor","currentEle","getResult","console","log","allNegative","i","j","temp"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,WAArB,EAAkC;AAChC,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAGH,GAAG,CAACI,MAAJ,GAAa,CAAvB;;AAEA,SAAOF,GAAG,IAAIC,GAAd,EAAmB;AACjB,QAAIE,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,GAAG,GAAGC,GAAP,IAAc,CAAzB,CAAV;AACA,QAAIK,UAAU,GAAGR,GAAG,CAACK,GAAD,CAApB;;AAEA,QAAIL,GAAG,CAACK,GAAD,CAAH,GAAWJ,WAAf,EAA4B;AAC1BC,MAAAA,GAAG,GAAGG,GAAG,GAAG,CAAZ;AACD,KAFD,MAEO,IAAIL,GAAG,CAACK,GAAD,CAAH,GAAWJ,WAAf,EAA4B;AACjCE,MAAAA,GAAG,GAAGE,GAAG,GAAG,CAAZ;AACD,KAFM,MAEA;AACL,aAAO,CAACA,GAAD,EAAMG,UAAN,CAAP;AACD;AACF;;AAED,SAAO,CAAC,CAAR;AACD;;AAED,IAAIC,SAAS,GAAGV,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAD,EAAqB,CAArB,CAAtB;AACAW,OAAO,CAACC,GAAR,CAAYF,SAAZ,GAEA;;AAEA,SAASG,WAAT,CAAqBZ,GAArB,EAA0B;AACxB,MAAIa,CAAC,GAAG,CAAR;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,GAAG,CAACI,MAAxB,EAAgCU,CAAC,EAAjC,EAAqC;AACnC,QAAId,GAAG,CAACc,CAAD,CAAH,GAAS,CAAb,EAAgB;AACd,UAAIA,CAAC,IAAID,CAAT,EAAY;AACV,YAAIE,IAAI,SAAR;AACAA,QAAAA,IAAI,GAAGf,GAAG,CAACc,CAAD,CAAV;AACAd,QAAAA,GAAG,CAACc,CAAD,CAAH,GAASd,GAAG,CAACa,CAAD,CAAZ;AACAb,QAAAA,GAAG,CAACa,CAAD,CAAH,GAASE,IAAT;AACD;;AACDF,MAAAA,CAAC;AACF;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD;;AACDY,WAAW,CAAC,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAC,CAAT,EAAY,EAAZ,EAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2B,EAA3B,EAA+B,CAAC,CAAhC,CAAD,CAAX","file":"index 01.07.7e3fe302.js","sourceRoot":"..","sourcesContent":["/**\n *  Binary search\n *\n */\n\nfunction search(arr, searchValue) {\n  let min = 0;\n  let max = arr.length - 1;\n\n  while (min <= max) {\n    let mid = Math.floor((min + max) / 2);\n    let currentEle = arr[mid];\n\n    if (arr[mid] < searchValue) {\n      min = mid + 1;\n    } else if (arr[mid] > searchValue) {\n      max = mid - 1;\n    } else {\n      return [mid, currentEle];\n    }\n  }\n\n  return -1;\n}\n\nlet getResult = search([1, 2, 3, 4, 5, 6], 4);\nconsole.log(getResult);\n\n// All negative on one side\n\nfunction allNegative(arr) {\n  let i = 0;\n\n  for (let j = 0; j < arr.length; j++) {\n    if (arr[j] < 0) {\n      if (j != i) {\n        let temp;\n        temp = arr[j];\n        arr[j] = arr[i];\n        arr[i] = temp;\n      }\n      i++;\n    }\n  }\n  console.log(arr);\n}\nallNegative([-3, 4, -1, 32, -3, 5, -2, 22, -1]);\n"]}