{"version":3,"sources":["Code/DS/searching pattern/index 07.07.js"],"names":["linearSearch","arr","searchValue","value","indexOf","binarySearch","start","end","length","mid","Math","floor","console","log","bsearch","ele"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,WAA3B,EAAwC;AAAA,6CACpBD,GADoB;AAAA;;AAAA;AACtC,wDAAuB;AAAA,UAAdE,KAAc;;AACrB,UAAIA,KAAK,KAAKD,WAAd,EAA2B;AACzB,eAAOD,GAAG,CAACG,OAAJ,CAAYF,WAAZ,CAAP;AACD;AACF;AALqC;AAAA;AAAA;AAAA;AAAA;;AAMtC,SAAO,CAAC,CAAR;AACD,EAED;;AAEA;AACA;AACA;;;AAEA,SAASG,YAAT,CAAsBJ,GAAtB,EAA2BC,WAA3B,EAAwC;AACtC,MAAII,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGN,GAAG,CAACO,MAAJ,GAAa,CAAvB;AACA,MAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAV;;AACA,SAAON,GAAG,CAACQ,GAAD,CAAH,KAAaP,WAAb,IAA4BI,KAAK,IAAIC,GAA5C,EAAiD;AAC/C,QAAIL,WAAW,GAAGD,GAAG,CAACQ,GAAD,CAArB,EAA4B;AAC1BF,MAAAA,GAAG,GAAGE,GAAG,GAAG,CAAZ;AACD,KAFD,MAEO;AACLH,MAAAA,KAAK,GAAGG,GAAG,GAAG,CAAd;AACD;;AACDA,IAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAN;AACD;;AAED,MAAIN,GAAG,CAACQ,GAAD,CAAH,KAAaP,WAAjB,EAA8B;AAC5B,WAAOO,GAAP;AACD;;AACD,SAAO,CAAC,CAAR;AACD;;AAEDG,OAAO,CAACC,GAAR,CAAYR,YAAY,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAD,EAA2B,CAA3B,CAAxB;;AAEA,SAASS,OAAT,CAAiBb,GAAjB,EAAsBc,GAAtB,EAA2B;AACzB,MAAIT,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAGN,GAAG,CAACO,MAAJ,GAAa,CAAvB;AACA,MAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAV;;AAEA,SAAON,GAAG,CAACQ,GAAD,CAAH,KAAaM,GAAb,IAAoBT,KAAK,IAAIC,GAApC,EAAyC;AACvCQ,IAAAA,GAAG,GAAGd,GAAG,CAACQ,GAAD,CAAT,GAAkBF,GAAG,GAAGE,GAAG,GAAG,CAA9B,GAAoCH,KAAK,GAAGG,GAAG,GAAG,CAAlD;AACAA,IAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAN;AACD;;AAED,SAAON,GAAG,CAACQ,GAAD,CAAH,KAAaM,GAAb,GAAmBN,GAAnB,GAAyB,CAAC,CAAjC;AACD;;AAEDG,OAAO,CAACC,GAAR,CAAYC,OAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAD,EAA2B,EAA3B,CAAnB","file":"index 07.07.1d83d817.js","sourceRoot":"..","sourcesContent":["/**\n *  Searchin Pattern JS\n * Linear Search\n */\n\nfunction linearSearch(arr, searchValue) {\n  for (let value of arr) {\n    if (value === searchValue) {\n      return arr.indexOf(searchValue);\n    }\n  }\n  return -1;\n}\n\n//console.log(linearSearch([1, 3, 4, 5, 29, 23, 43], 3));\n\n/**\n *  Binary Search\n */\n\nfunction binarySearch(arr, searchValue) {\n  let start = 0;\n  let end = arr.length - 1;\n  let mid = Math.floor((start + end) / 2);\n  while (arr[mid] !== searchValue && start <= end) {\n    if (searchValue < arr[mid]) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n    mid = Math.floor((start + end) / 2);\n  }\n\n  if (arr[mid] === searchValue) {\n    return mid;\n  }\n  return -1;\n}\n\nconsole.log(binarySearch([1, 3, 4, 5, 23, 25, 42], 5));\n\nfunction bsearch(arr, ele) {\n  let start = 0;\n  let end = arr.length - 1;\n  let mid = Math.floor((start + end) / 2);\n\n  while (arr[mid] !== ele && start <= end) {\n    ele < arr[mid] ? (end = mid - 1) : (start = mid + 1);\n    mid = Math.floor((start + end) / 2);\n  }\n\n  return arr[mid] === ele ? mid : -1;\n}\n\nconsole.log(bsearch([1, 3, 4, 5, 23, 25, 42], 53));\n"]}